/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jym.ferreteria.gui.dialogs;

import java.awt.event.KeyEvent;
import javax.swing.ImageIcon;
import jym.ferreteria.clases.Controlador;
import jym.ferreteria.renders.CustomTableModel;

/**
 *
 * @author Omr
 */
public class SeleccionarClienteDialog extends javax.swing.JDialog {

        private CustomTableModel model = new CustomTableModel();
        private Controlador control = new Controlador();
        private String[] datos;

        /**
         * Creates new form SeleccionarCliente
         */
        public SeleccionarClienteDialog(java.awt.Frame parent, boolean modal) {
                super(parent, modal);
                initComponents();
                setIconImage(new ImageIcon(getClass().getResource(Controlador.ICON_PATH)).getImage());
                model.setColumnIdentifiers(new String[]{"Id", "DNI", "Nombre", "Direcci√≥n","tipo"});
                tablaCliente.setModel(model);
                control.hideTableColumn(tablaCliente, 0,4);
                control.tableMaxWidthColumn(tablaCliente, 110, 1);
                control.tableWidthColumn(tablaCliente, 300, 2);
                control.tableWidthColumn(tablaCliente, 300, 3);
                cargarClientes();
        }

        /**
         * This method is called from within the constructor to initialize the
         * form. WARNING: Do NOT modify this code. The content of this method is
         * always regenerated by the Form Editor.
         */
        @SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
        private void initComponents() {

                lblBuscar = new javax.swing.JLabel();
                jTextField1 = new javax.swing.JTextField();
                jScrollPane1 = new javax.swing.JScrollPane();
                tablaCliente = new javax.swing.JTable();
                btnNuevo = new javax.swing.JButton();

                setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
                setTitle("Seleccionar Cliente");

                lblBuscar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
                lblBuscar.setText("Buscar: ");
                lblBuscar.setName("lblBuscar"); // NOI18N

                jTextField1.setName("jTextField1"); // NOI18N
                jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
                        public void keyPressed(java.awt.event.KeyEvent evt) {
                                jTextField1KeyPressed(evt);
                        }
                        public void keyReleased(java.awt.event.KeyEvent evt) {
                                jTextField1KeyReleased(evt);
                        }
                });

                jScrollPane1.setName("jScrollPane1"); // NOI18N

                tablaCliente.setAutoCreateRowSorter(true);
                tablaCliente.setModel(new javax.swing.table.DefaultTableModel(
                        new Object [][] {
                                {null, null, null, null},
                                {null, null, null, null},
                                {null, null, null, null},
                                {null, null, null, null}
                        },
                        new String [] {
                                "Title 1", "Title 2", "Title 3", "Title 4"
                        }
                ));
                tablaCliente.setName("tablaCliente"); // NOI18N
                tablaCliente.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
                tablaCliente.getTableHeader().setReorderingAllowed(false);
                tablaCliente.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                tablaClienteMouseClicked(evt);
                        }
                });
                tablaCliente.addKeyListener(new java.awt.event.KeyAdapter() {
                        public void keyPressed(java.awt.event.KeyEvent evt) {
                                tablaClienteKeyPressed(evt);
                        }
                });
                jScrollPane1.setViewportView(tablaCliente);

                btnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jym/ferreteria/imagenes/add-icon.png"))); // NOI18N
                btnNuevo.setMnemonic('N');
                btnNuevo.setText("Nuevo");
                btnNuevo.setName("btnNuevo"); // NOI18N
                btnNuevo.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                btnNuevoActionPerformed(evt);
                        }
                });

                javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
                getContentPane().setLayout(layout);
                layout.setHorizontalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPane1)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(lblBuscar)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 532, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(btnNuevo, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)))
                                .addContainerGap())
                );
                layout.setVerticalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lblBuscar)
                                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnNuevo))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 305, Short.MAX_VALUE)
                                .addContainerGap())
                );

                pack();
        }// </editor-fold>//GEN-END:initComponents

    private void tablaClienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaClienteMouseClicked
                if (evt.getClickCount() > 1) {
                        seleccionarCliente();
                }
    }//GEN-LAST:event_tablaClienteMouseClicked

    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased
                cargarClientes();
    }//GEN-LAST:event_jTextField1KeyReleased

    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed
                if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
                        if (model.getRowCount() > 0) {
                                tablaCliente.getSelectionModel().setSelectionInterval(0, 0);
                                tablaCliente.requestFocus();
                        }
                }
    }//GEN-LAST:event_jTextField1KeyPressed

    private void tablaClienteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tablaClienteKeyPressed
                if (evt.getKeyCode() == KeyEvent.VK_ENTER && tablaCliente.getSelectedRow() >= 0) {
                        seleccionarCliente();
                }
    }//GEN-LAST:event_tablaClienteKeyPressed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
                nuevoCliente();
    }//GEN-LAST:event_btnNuevoActionPerformed

        /**
         * @param args the command line arguments
         */
        public static void main(String args[]) {
                /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
                 * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
                 */
                try {
                        for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                                if ("Nimbus".equals(info.getName())) {
                                        javax.swing.UIManager.setLookAndFeel(info.getClassName());
                                        break;
                                }
                        }
                } catch (ClassNotFoundException ex) {
                        java.util.logging.Logger.getLogger(SeleccionarClienteDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                } catch (InstantiationException ex) {
                        java.util.logging.Logger.getLogger(SeleccionarClienteDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                } catch (IllegalAccessException ex) {
                        java.util.logging.Logger.getLogger(SeleccionarClienteDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                } catch (javax.swing.UnsupportedLookAndFeelException ex) {
                        java.util.logging.Logger.getLogger(SeleccionarClienteDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                }
        //</editor-fold>

                /* Create and display the dialog */
                java.awt.EventQueue.invokeLater(new Runnable() {
                        public void run() {
                                SeleccionarClienteDialog dialog = new SeleccionarClienteDialog(new javax.swing.JFrame(), true);
                                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                                        @Override
                                        public void windowClosing(java.awt.event.WindowEvent e) {
                                                System.exit(0);
                                        }
                                });
                                dialog.setVisible(true);
                        }
                });
        }

        // Variables declaration - do not modify//GEN-BEGIN:variables
        private javax.swing.JButton btnNuevo;
        private javax.swing.JScrollPane jScrollPane1;
        private javax.swing.JTextField jTextField1;
        private javax.swing.JLabel lblBuscar;
        private javax.swing.JTable tablaCliente;
        // End of variables declaration//GEN-END:variables

        public void cargarClientes() {
                String text = jTextField1.getText();
                control.Sql = "SELECT `idCliente`,`dniRuc`, `nomcte`, `direc`, tipo FROM `cliente` WHERE `nomcte` LIKE '%" + text + "%' or `dniRuc` like '%" + text + "%' order by nomcte;";                
                control.LlenarJTabla(model, control.Sql, 5);
        }

        private void seleccionarCliente() {
                int row = tablaCliente.getSelectedRow();
                datos = new String[5];
                datos[0] = model.getValueAt(row, 0).toString();//id
                datos[1] = model.getValueAt(row, 1).toString();//dniRuc
                datos[2] = model.getValueAt(row, 2).toString();//Nombre
                datos[3] = model.getValueAt(row, 3).toString();//direcci√≥n
                datos[4] = model.getValueAt(row, 4).toString();//tipo

                this.dispose();

        }

        /**
         *
         * @return [id, dniRuc, nombre, direcci√≥n]
         */
        public String[] getDatos() {
                return datos;
        }

        @Override
        public void setVisible(boolean b) {
                datos = null;
                super.setVisible(b); //To change body of generated methods, choose Tools | Templates.
        }

        private void nuevoCliente() {
                RegistrarNuevoClienteDialog cliente = new RegistrarNuevoClienteDialog(null, true);
                cliente.setLocationRelativeTo(null);
                cliente.setVisible(true);
                String[] datos1 = cliente.getDatos();
                if (datos1 != null) {
                        datos = new String[5];
                        datos[0] = datos1[0];//id
                        datos[1] = datos1[1];//dniRuc
                        datos[2] = datos1[2];//Nombre
                        datos[3] = datos1[3];//direcci√≥n
                        datos[4] = datos1[4];//direcci√≥n
                        this.dispose();

                }
        }

}
