/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jym.ferreteria.gui.dialogs;

import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

import jym.ferreteria.clases.ConexionBD;
import jym.ferreteria.clases.Controlador;
//import static jym.ferreteria.gui.internalframes.FrmRegistrarVenta.txtCantidad;
import jym.ferreteria.renders.CustomTableModel;
import jym.ferreteria.gui.internalframes.FrmGestionCatalogoProductos;

/**
 *
 * @author Omr
 */
public class AsignarUnidades extends javax.swing.JDialog {
    
        public static ConexionBD Base = ConexionBD.getInstance();
        private CustomTableModel model = new CustomTableModel();
        private Controlador control = new Controlador();
       
        private String[] datos;
        private int idProd;
        private String idUnid;
        private String idProdUnid;
        public static final int OK = 0;
         private int result = OK;

        /**
         * Creates new form SeleccionarCliente
         */
        public AsignarUnidades(java.awt.Frame parent, boolean modal) {
                super(parent, modal);
                initComponents();
                setIconImage(new ImageIcon(getClass().getResource(Controlador.ICON_PATH)).getImage());
                model.setColumnIdentifiers(new String[]{"Id", "Descripción", "Cantidad", "Código Unidad", "Precio de Venta", "Precio de Compra","idPU"});
                tablaCliente.setModel(model);
                control.hideTableColumn(tablaCliente, 0);
                 control.hideTableColumn(tablaCliente, 6);
                control.tableMaxWidthColumn(tablaCliente, 150, 1);
                control.tableWidthColumn(tablaCliente, 90, 2);
                control.tableWidthColumn(tablaCliente, 150, 3);
                control.tableWidthColumn(tablaCliente, 90, 4);
                cargarUnidades();
        }

        /**
         * This method is called from within the constructor to initialize the
         * form. WARNING: Do NOT modify this code. The content of this method is
         * always regenerated by the Form Editor.
         */
        @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblBuscar = new javax.swing.JLabel();
        txtnom = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaCliente = new javax.swing.JTable();
        lblBuscar2 = new javax.swing.JLabel();
        txtUni = new javax.swing.JTextField();
        lblBuscar3 = new javax.swing.JLabel();
        txtCant = new javax.swing.JTextField();
        txtPrecio = new javax.swing.JTextField();
        lblBuscar4 = new javax.swing.JLabel();
        txtcodUnid = new javax.swing.JTextField();
        lblBuscar5 = new javax.swing.JLabel();
        bModificar = new javax.swing.JButton();
        bCancelar = new javax.swing.JButton();
        bSalir = new javax.swing.JButton();
        lblBuscar6 = new javax.swing.JLabel();
        txtPrecioCompra = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Asignar Unidades");

        lblBuscar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblBuscar.setText("Producto:");
        lblBuscar.setName("lblBuscar"); // NOI18N

        txtnom.setName("txtnom"); // NOI18N
        txtnom.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtnomKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtnomKeyReleased(evt);
            }
        });

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        tablaCliente.setAutoCreateRowSorter(true);
        tablaCliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaCliente.setName("tablaCliente"); // NOI18N
        tablaCliente.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tablaCliente.getTableHeader().setReorderingAllowed(false);
        tablaCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaClienteMouseClicked(evt);
            }
        });
        tablaCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tablaClienteKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tablaCliente);

        lblBuscar2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblBuscar2.setText("Unidad:");
        lblBuscar2.setName("lblBuscar2"); // NOI18N

        txtUni.setName("txtUni"); // NOI18N
        txtUni.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtUniKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtUniKeyReleased(evt);
            }
        });

        lblBuscar3.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblBuscar3.setText("Cantidad:");
        lblBuscar3.setName("lblBuscar3"); // NOI18N

        txtCant.setName("txtCant"); // NOI18N
        txtCant.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCantKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCantKeyReleased(evt);
            }
        });

        txtPrecio.setName("txtPrecio"); // NOI18N
        txtPrecio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPrecioKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPrecioKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPrecioKeyTyped(evt);
            }
        });

        lblBuscar4.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblBuscar4.setText("Precio:");
        lblBuscar4.setName("lblBuscar4"); // NOI18N

        txtcodUnid.setName("txtcodUnid"); // NOI18N
        txtcodUnid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcodUnidActionPerformed(evt);
            }
        });
        txtcodUnid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtcodUnidKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtcodUnidKeyReleased(evt);
            }
        });

        lblBuscar5.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblBuscar5.setText("Código Unidad:");
        lblBuscar5.setName("lblBuscar5"); // NOI18N

        bModificar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        bModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jym/ferreteria/imagenes/Edit.png"))); // NOI18N
        bModificar.setMnemonic('e');
        bModificar.setText("Guardar");
        bModificar.setEnabled(false);
        bModificar.setName("bModificar"); // NOI18N
        bModificar.setPreferredSize(new java.awt.Dimension(98, 33));
        bModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bModificarActionPerformed(evt);
            }
        });

        bCancelar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        bCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jym/ferreteria/imagenes/cancel.png"))); // NOI18N
        bCancelar.setMnemonic('a');
        bCancelar.setText("Cancelar");
        bCancelar.setName("bCancelar"); // NOI18N
        bCancelar.setPreferredSize(new java.awt.Dimension(114, 33));
        bCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCancelarActionPerformed(evt);
            }
        });

        bSalir.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        bSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jym/ferreteria/imagenes/salir.png"))); // NOI18N
        bSalir.setMnemonic('s');
        bSalir.setText("Salir");
        bSalir.setName("bSalir"); // NOI18N
        bSalir.setPreferredSize(new java.awt.Dimension(92, 33));
        bSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSalirActionPerformed(evt);
            }
        });

        lblBuscar6.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblBuscar6.setText("Costo de Compra:");
        lblBuscar6.setName("lblBuscar6"); // NOI18N

        txtPrecioCompra.setName("txtPrecioCompra"); // NOI18N
        txtPrecioCompra.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPrecioCompraKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPrecioCompraKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPrecioCompraKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblBuscar2)
                            .addComponent(lblBuscar3)
                            .addComponent(lblBuscar4)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblBuscar5, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(lblBuscar))
                            .addComponent(lblBuscar6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtcodUnid, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPrecioCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCant, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtUni, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(13, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addComponent(txtnom, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(102, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtnom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblBuscar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bModificar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bSalir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblBuscar2)
                            .addComponent(txtUni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblBuscar3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblBuscar4))
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPrecioCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblBuscar6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtcodUnid, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblBuscar5))
                        .addGap(25, 25, 25)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tablaClienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaClienteMouseClicked
                if (evt.getClickCount() == 2) {
                        VerDatos();
                }
    }//GEN-LAST:event_tablaClienteMouseClicked

    private void txtnomKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtnomKeyReleased
                
    }//GEN-LAST:event_txtnomKeyReleased

    private void txtnomKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtnomKeyPressed
                if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
                        if (model.getRowCount() > 0) {
                                tablaCliente.getSelectionModel().setSelectionInterval(0, 0);
                                tablaCliente.requestFocus();
                        }
                }
    }//GEN-LAST:event_txtnomKeyPressed

    private void tablaClienteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tablaClienteKeyPressed
                if (evt.getKeyCode() == KeyEvent.VK_ENTER && tablaCliente.getSelectedRow() >= 0) {
                        seleccionarCliente();
                }
    }//GEN-LAST:event_tablaClienteKeyPressed

    private void txtUniKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUniKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUniKeyPressed

    private void txtUniKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUniKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUniKeyReleased

    private void txtCantKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCantKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCantKeyPressed

    private void txtCantKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCantKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCantKeyReleased

    private void txtPrecioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrecioKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPrecioKeyPressed

    private void txtPrecioKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrecioKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPrecioKeyReleased

    private void txtcodUnidKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcodUnidKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcodUnidKeyPressed

    private void txtcodUnidKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcodUnidKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcodUnidKeyReleased

    private void txtcodUnidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcodUnidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcodUnidActionPerformed

    private void bModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bModificarActionPerformed
        //EditarCatalogo();
        Guardar();
    }//GEN-LAST:event_bModificarActionPerformed

    private void bCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCancelarActionPerformed
        
        bModificar.setEnabled(false);
        txtCant.setText("");
        txtUni.setText("");
        txtPrecio.setText("");
        txtcodUnid.setText("");
        txtPrecioCompra.setText("");
        
    }//GEN-LAST:event_bCancelarActionPerformed

    private void bSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSalirActionPerformed

        dispose();
    }//GEN-LAST:event_bSalirActionPerformed

    private void txtPrecioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrecioKeyTyped
    control.decimal(evt, txtPrecio.getText());        // TODO add your handling code here:
    }//GEN-LAST:event_txtPrecioKeyTyped

    private void txtPrecioCompraKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrecioCompraKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPrecioCompraKeyPressed

    private void txtPrecioCompraKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrecioCompraKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPrecioCompraKeyReleased

    private void txtPrecioCompraKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrecioCompraKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPrecioCompraKeyTyped

        /**
         * @param args the command line arguments
         */
        public static void main(String args[]) {
                /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
                 * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
                 */
                try {
                        for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                                if ("Nimbus".equals(info.getName())) {
                                        javax.swing.UIManager.setLookAndFeel(info.getClassName());
                                        break;
                                }
                        }
                } catch (ClassNotFoundException ex) {
                        java.util.logging.Logger.getLogger(AsignarUnidades.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                } catch (InstantiationException ex) {
                        java.util.logging.Logger.getLogger(AsignarUnidades.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                } catch (IllegalAccessException ex) {
                        java.util.logging.Logger.getLogger(AsignarUnidades.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                } catch (javax.swing.UnsupportedLookAndFeelException ex) {
                        java.util.logging.Logger.getLogger(AsignarUnidades.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                }
        //</editor-fold>
        //</editor-fold>

                /* Create and display the dialog */
                java.awt.EventQueue.invokeLater(new Runnable() {
                        public void run() {
                                AsignarUnidades dialog = new AsignarUnidades(new javax.swing.JFrame(), true);
                                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                                        @Override
                                        public void windowClosing(java.awt.event.WindowEvent e) {
                                                System.exit(0);
                                        }
                                });
                                dialog.setVisible(true);
                        }
                });
        }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bCancelar;
    private javax.swing.JButton bModificar;
    private javax.swing.JButton bSalir;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblBuscar;
    private javax.swing.JLabel lblBuscar2;
    private javax.swing.JLabel lblBuscar3;
    private javax.swing.JLabel lblBuscar4;
    private javax.swing.JLabel lblBuscar5;
    private javax.swing.JLabel lblBuscar6;
    private javax.swing.JTable tablaCliente;
    private javax.swing.JTextField txtCant;
    private javax.swing.JTextField txtPrecio;
    private javax.swing.JTextField txtPrecioCompra;
    private javax.swing.JTextField txtUni;
    private javax.swing.JTextField txtcodUnid;
    private javax.swing.JTextField txtnom;
    // End of variables declaration//GEN-END:variables
    
    public void setDatos(int idProduc) {
        this.idProd = idProduc;

        cargarUnidades();
    }
    
     public void VerDatos() {
        control.fila = tablaCliente.getSelectedRow();
        if (control.fila >= 0) { 
            idUnid = tablaCliente.getValueAt(control.fila, 0).toString();
            txtUni.setText(tablaCliente.getValueAt(control.fila, 1).toString());
            txtCant.setText(tablaCliente.getValueAt(control.fila, 2).toString());
            txtcodUnid.setText(tablaCliente.getValueAt(control.fila, 3).toString());
            txtPrecio.setText(tablaCliente.getValueAt(control.fila, 4).toString());
            txtPrecioCompra.setText(tablaCliente.getValueAt(control.fila, 5).toString());
            bModificar.setEnabled(true);
            
            idProdUnid=tablaCliente.getValueAt(control.fila, 6).toString();
            
            txtPrecio.grabFocus();
        
        } 
     
     }
     
     public void Guardar() { 
     
     if(txtcodUnid.getText().trim().length()==0){
         JOptionPane.showMessageDialog(null, "Ingrese un código para las Unidades del Producto");
     }
     else{
         
         if(txtPrecio.getText().trim().length()==0||txtPrecioCompra.getText().trim().length()==0){
             JOptionPane.showMessageDialog(null, "Ingrese un precio y un Costo de Compra para estas unidades");
         }
         else{
             control.Sql ="call GesUnidades('"+idProd+"','"+idUnid+"','"+idProdUnid+"','"+txtcodUnid.getText().trim()+"','"+txtPrecio.getText().trim()+"','"+txtPrecioCompra.getText().trim()+"');";
             String resultado = control.EditarRegistroDev(control.Sql);
                            if (resultado.equals("1")) {
                               
                                cargarUnidades();
                                JOptionPane.showMessageDialog(this, "La Unidad "+txtUni.getText()+" se ha actualizado correctamente");
           
                                bModificar.setEnabled(false);
                                txtCant.setText("");
                                txtUni.setText("");
                                txtPrecio.setText("");
                                txtPrecioCompra.setText("");
                                txtcodUnid.setText("");
                                //gestioncatalogo.MostrarCatalogo();
                                
                                

//
                            } else {
                                JOptionPane.showMessageDialog(rootPane, resultado);
                            }
             
         }
     }
     }
        private void cargarUnidades() {
            LimTabla(model);
                String idP = "";
                String nomP = "";
                String cod="";
                double prec=0;
                double cost=0;
                double precf=0;
                double precc=0;
                String codUnid="";
                String idPU="";
                String Data[]=new String[7];
            try{
           
               String sq="SELECT * FROM produto p where idProduto='"+idProd+"';";
               Base.rt = Base.st.executeQuery(sq);
               Base.st = Base.conec.createStatement();
            Base.rt = Base.st.executeQuery(sq);
            if (Base.rt.next()) {
                idP = Base.rt.getString(1);
                nomP = Base.rt.getString(2);
                cost=Double.parseDouble(Base.rt.getString(10));
                cod = Base.rt.getString(14);
                prec=Double.parseDouble(Base.rt.getString(8));
            }
            
            } catch (Exception ex) {
            Logger.getLogger(Controlador.class.getName()).log(Level.SEVERE, null, ex);
        }
                txtnom.setText(nomP);
               
                
                txtnom.setEditable(false);
               
                txtUni.setEditable(false);
                txtCant.setEditable(false);
                
                String idU="", nomU="",cant="";
                
                
                
                
        try{
           
               String sq="SELECT u.idUnidades,u.nomuniddes,u.cantidad,\n" +
                "(select d.codUnid from detunidprod d where d.idProducto='"+idP+"' and d.idUnidades=u.idUnidades),\n" +
                "(select d.precio from detunidprod d where d.idProducto='"+idP+"' and d.idUnidades=u.idUnidades),\n" +
                "(select d.costoCompra from detunidprod d where d.idProducto='"+idP+"' and d.idUnidades=u.idUnidades),\n"+
                "(select d.iddetUniProd from detunidprod d where d.idProducto='"+idP+"' and d.idUnidades=u.idUnidades)\n" +
                "FROM unidades u order by cantidad;";
               Base.rt = Base.st.executeQuery(sq);
               Base.st = Base.conec.createStatement();
            Base.rt = Base.st.executeQuery(sq);
            while (Base.rt.next()) {
                idU=Base.rt.getString(1);
                nomU=Base.rt.getString(2);
                cant=Base.rt.getString(3);
                
                Data[0]=idU;
                Data[1]=nomU;
                Data[2]=cant;
                precf=prec*Double.parseDouble(cant);
                precc=cost*Double.parseDouble(cant);
                codUnid=""+Base.rt.getString(5);
                
                if(codUnid.equals("null")){
                    //precf=Double.parseDouble(Base.rt.getString(5));
                    codUnid="";
                    idPU="0";
                }
                else{
                    codUnid=""+Base.rt.getString(4);
                    precf=Double.parseDouble(Base.rt.getString(5));
                    precc=Double.parseDouble(Base.rt.getString(6));
                    idPU=Base.rt.getString(7);
                     }
                
                //

                Data[3]=codUnid;
                Data[4]=control.decimalFormat(precf);
                Data[5]=control.decimalFormat(precc);
                Data[6]=idPU;
                
                
               model.addRow(Data);  
                
                
                
                
            }
            
            } catch (Exception ex) {
            Logger.getLogger(Controlador.class.getName()).log(Level.SEVERE, null, ex);
        }      
                
              

        }
        
        public void LimTabla(CustomTableModel mdl) {
        while (mdl.getRowCount() > 0) {
            mdl.removeRow(0);
        }
    }

        private void seleccionarCliente() {
                int row = tablaCliente.getSelectedRow();
                datos = new String[4];
                datos[0] = model.getValueAt(row, 0).toString();//id
                datos[1] = model.getValueAt(row, 1).toString();//dniRuc
                datos[2] = model.getValueAt(row, 2).toString();//Nombre
                datos[3] = model.getValueAt(row, 3).toString();//dirección
                datos[4] = model.getValueAt(row, 4).toString();
                this.dispose();

        }

        /**
         *
         * @return [id, dniRuc, nombre, dirección]
         */
        public String[] getDatos() {
                return datos;
        }

        @Override
        public void setVisible(boolean b) {
                datos = null;
                super.setVisible(b); //To change body of generated methods, choose Tools | Templates.
        }
        
        public int getResult() {
        return result;
    }


}
