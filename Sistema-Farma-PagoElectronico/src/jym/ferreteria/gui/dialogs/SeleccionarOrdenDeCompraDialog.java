/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jym.ferreteria.gui.dialogs;

import java.awt.event.KeyEvent;
import javax.swing.ImageIcon;
import jym.ferreteria.clases.Controlador;
import jym.ferreteria.renders.CustomTableModel;

/**
 *
 * @author Omr
 */
public class SeleccionarOrdenDeCompraDialog extends javax.swing.JDialog {

    private CustomTableModel model = new CustomTableModel();
    private Controlador control = new Controlador();
    private String[] datos;
    private String proveedor;

    /**
     * Creates new form SeleccionarOrdenDeCompra
     */
    public SeleccionarOrdenDeCompraDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
         setIconImage(new ImageIcon(getClass().getResource(Controlador.ICON_PATH)).getImage());
        model.setColumnIdentifiers(new String[]{"Id", "NÂ° Pedido", "Fecha", "Proveedor", "Total pedido"});
        tablaPedidos.setModel(model);
        control.hideTableColumn(tablaPedidos, 0);
        control.tableWidthColumn(tablaPedidos, 500, 3);
        cargarPedidos();
   
        

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblBuscar = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaPedidos = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Seleccionar Pedidos a proveedor");

        lblBuscar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblBuscar.setText("Buscar:");
        lblBuscar.setName("lblBuscar"); // NOI18N

        jTextField1.setName("jTextField1"); // NOI18N
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
        });

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        tablaPedidos.setAutoCreateRowSorter(true);
        tablaPedidos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaPedidos.setName("tablaPedidos"); // NOI18N
        tablaPedidos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tablaPedidos.getTableHeader().setReorderingAllowed(false);
        tablaPedidos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaPedidosMouseClicked(evt);
            }
        });
        tablaPedidos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tablaPedidosKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tablaPedidos);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 770, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBuscar)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tablaPedidosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaPedidosMouseClicked
        if (evt.getClickCount() > 1) {
            seleccionarPedido();
        }
    }//GEN-LAST:event_tablaPedidosMouseClicked

    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased
        cargarPedidos();
    }//GEN-LAST:event_jTextField1KeyReleased

    private void tablaPedidosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tablaPedidosKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER && tablaPedidos.getSelectedRow() >= 0) {
            seleccionarPedido();
        }
    }//GEN-LAST:event_tablaPedidosKeyPressed

    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (model.getRowCount() > 0) {
                tablaPedidos.getSelectionModel().setSelectionInterval(0, 0);
                tablaPedidos.requestFocus();
            }
        }
    }//GEN-LAST:event_jTextField1KeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SeleccionarOrdenDeCompraDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SeleccionarOrdenDeCompraDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SeleccionarOrdenDeCompraDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SeleccionarOrdenDeCompraDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                SeleccionarOrdenDeCompraDialog dialog = new SeleccionarOrdenDeCompraDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel lblBuscar;
    private javax.swing.JTable tablaPedidos;
    // End of variables declaration//GEN-END:variables

    private void cargarPedidos() {
        String text = jTextField1.getText();
        if(proveedor==null){
             control.Sql = "SELECT o.`idOrdenDeCompra`, o.`numero`, date_format(o.`fechaPedido`,'%d/%m/%Y'), p.`Nombre`, IFNULL(SUM(d.`cant`* d.`Costo`),0) "
                + "FROM ordendecompra o, detalleproducto d, proveedor p "
                + "WHERE p.`idProveedor`=o.`idProveedor` "
                + "AND o.`idOrdenDeCompra`=d.`idOrdenDeCompra` "
                + "AND o.`estado`='Por entregar' "
                + "AND (o.`numero` LIKE '%" + text + "%' OR date_format(o.`fechaPedido`,'%d/%m/%Y') LIKE '%" + text + "%' OR p.`Nombre` LIKE '%" + text + "%') "
                + "GROUP BY o.`idOrdenDeCompra` ORDER BY o.`numero`;";
        }else{
              control.Sql = "SELECT o.`idOrdenDeCompra`, o.`numero`, date_format(o.`fechaPedido`,'%d/%m/%Y'), p.`Nombre`, IFNULL(SUM(d.`cant`* d.`Costo`),0) "
                + "FROM ordendecompra o, detalleproducto d, proveedor p "
                + "WHERE p.`idProveedor`=o.`idProveedor` "
                + "AND o.`idOrdenDeCompra`=d.`idOrdenDeCompra` "
                + "AND o.`estado`='Por entregar' "
                + "AND p.`idProveedor`='"+proveedor+"' "
                + "AND (o.`numero` LIKE '%" + text + "%' OR date_format(o.`fechaPedido`,'%d/%m/%Y') LIKE '%" + text + "%' OR p.`Nombre` LIKE '%" + text + "%') "
                + "GROUP BY o.`idOrdenDeCompra` ORDER BY o.`numero`;";
              
        }
      
        control.LlenarJTabla(model, control.Sql, 5);
    }

    private void seleccionarPedido() {
        int row = tablaPedidos.getSelectedRow();
        datos = new String[5];
        datos[0] = model.getValueAt(row, 0).toString();
        datos[1] = model.getValueAt(row, 1).toString();
        datos[2] = model.getValueAt(row, 2).toString();
        datos[3] = model.getValueAt(row, 3).toString();
        datos[4] = model.getValueAt(row, 4).toString();

        this.dispose();

    }

    public String[] getDatos() {
        return datos;
    }
    @Override
    public void setVisible(boolean b) {
        datos=null;
        super.setVisible(b); //To change body of generated methods, choose Tools | Templates.
    }

    public void setProveedor(String proveedor) {
        this.proveedor=proveedor;
        cargarPedidos();
    }
}
