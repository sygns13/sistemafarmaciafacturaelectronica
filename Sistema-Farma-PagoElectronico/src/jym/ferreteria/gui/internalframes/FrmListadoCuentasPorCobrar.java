/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jym.ferreteria.gui.internalframes;

import java.util.HashMap;
import java.util.Map;
import javax.swing.ImageIcon;
import javax.swing.JLayeredPane;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import jym.ferreteria.clases.Accesos;
import jym.ferreteria.clases.Controlador;
import jym.ferreteria.clases.Numero_a_Letra;
import jym.ferreteria.gui.FrmMain;
import jym.ferreteria.renders.CustomTableModel;

/**
 *
 * @author Omr
 */
public class FrmListadoCuentasPorCobrar extends javax.swing.JInternalFrame {

    private Controlador control = new Controlador();
    private CustomTableModel model = new CustomTableModel();
    private String idusu="";

    /**
     * Creates new form ListadoVentas
     */
    public FrmListadoCuentasPorCobrar() {
        initComponents();
        userspeshal();
        this.setFrameIcon(new ImageIcon(this.getClass().getResource(Controlador.ICON_PATH)));
        model.setColumnIdentifiers(new String[]{"N° de Venta", "Fecha", "Comprobante", "Cliente", "Imp. Total", "Imp. Cobrado", "Imp. Pendiente", "¿Cobrado?","vendedor"});
        tablaVentas.setModel(model);
        //control.hideTableColumn(tablaVentas, 0);
        control.tableWidthColumn(tablaVentas, 400, 3);
        control.tableWidthColumn(tablaVentas, 190, 2);
        control.tableMaxWidthColumn(tablaVentas, 80, 1);
        control.tableMaxWidthColumn(tablaVentas, 100, 4, 5, 6);
        control.tableMaxWidthColumn(tablaVentas, 100, 8);

        tablaVentas.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                btnVerVenta.setEnabled(true);
                btnCobrar.setEnabled(true);
            }
        });
        cargarVentas();

    }
    
    public void userspeshal(){
    idusu=Accesos.getInstance().getIdUsuario();
    //System.out.println(idusu);
    
   // JOptionPane.showMessageDialog(null, idusu);
            
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtBuscar = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaVentas = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        btnVerVenta = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        btnCobrar = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();

        setClosable(true);
        setIconifiable(true);
        setTitle("Cuentas por cobrar");

        jLabel1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel1.setText("Buscar: ");
        jLabel1.setName("jLabel1"); // NOI18N

        txtBuscar.setName("txtBuscar"); // NOI18N
        txtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarKeyReleased(evt);
            }
        });

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        tablaVentas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaVentas.setName("tablaVentas"); // NOI18N
        tablaVentas.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tablaVentas.getTableHeader().setReorderingAllowed(false);
        tablaVentas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaVentasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaVentas);

        jPanel1.setName("jPanel1"); // NOI18N

        btnVerVenta.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnVerVenta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jym/ferreteria/imagenes/Mimetypes-application-pdf-icon.png"))); // NOI18N
        btnVerVenta.setMnemonic('V');
        btnVerVenta.setText("Ver Venta");
        btnVerVenta.setName("btnVerVenta"); // NOI18N
        btnVerVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerVentaActionPerformed(evt);
            }
        });

        btnSalir.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jym/ferreteria/imagenes/salir.png"))); // NOI18N
        btnSalir.setMnemonic('S');
        btnSalir.setText("Salir");
        btnSalir.setName("btnSalir"); // NOI18N
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        btnCobrar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnCobrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jym/ferreteria/imagenes/nuevo-sol.png"))); // NOI18N
        btnCobrar.setText("Cobrar");
        btnCobrar.setName("btnCobrar"); // NOI18N
        btnCobrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCobrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(654, Short.MAX_VALUE)
                .addComponent(btnVerVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(199, 199, 199)
                .addComponent(btnCobrar, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSalir)
                            .addComponent(btnVerVenta))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(btnCobrar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jCheckBox1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jCheckBox1.setText("Cobrado");
        jCheckBox1.setName("jCheckBox1"); // NOI18N
        jCheckBox1.setOpaque(false);
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBuscar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBox1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtBuscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyReleased
        cargarVentas();
    }//GEN-LAST:event_txtBuscarKeyReleased

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void tablaVentasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaVentasMouseClicked

    }//GEN-LAST:event_tablaVentasMouseClicked

    private void btnVerVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerVentaActionPerformed
        visualizarVenta();
    }//GEN-LAST:event_btnVerVentaActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        cargarVentas();
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void btnCobrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCobrarActionPerformed
        cobrar();
    }//GEN-LAST:event_btnCobrarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCobrar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JButton btnVerVenta;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaVentas;
    private javax.swing.JTextField txtBuscar;
    // End of variables declaration//GEN-END:variables

    private void cargarVentas() {
        String text = txtBuscar.getText();
        String tipoComp="";
        if(idusu.equals("0")){
            tipoComp=" and t.idTipoComprobante<>8 ";
    }
        
        
        control.Sql = "SELECT v.`idVenta`, date_format(v.`fecha`,'%d/%m/%Y') as fecha, "
                + "CONCAT(t.`nombre`,' N° ', co.`serie`,' - ' ,co.`numero`) as comprobante, "
                + "c.`nomcte`, FORMAT(@a:= v.`subTotalInafecto`+v.`subTotalAfecto`+ v.`igv`,2) AS total, "
                + "FORMAT(@b:=(SELECT IFNULL(SUM(cv.`importe`),0.00) As montoCobrado FROM `cobroventa` cv "
                + "WHERE cv.`idVenta`=v.`idVenta`),2) AS montoCobrado, FORMAT(@a-@b,2) AS porCobrar, IF(v.`pagado`,'Si','No') AS pagado , u.nomusr "
                + "FROM cliente c, venta v,  usuario u, comprobante co, tipocomprobante t "
                + "WHERE v.`idCliente`=c.`idCliente`  "+tipoComp+"  "
                + "AND v.`idComprobante`=co.`idComprobante` and v.estado<>'Anulado' "
                + "AND co.`idTipoComprobante`=t.`idTipoComprobante` and v.idUsuario=u.idUsuario "
                + "AND (date_format(v.`fecha`,'%d/%m/%Y') LIKE '%" + text + "%' OR t.`nombre` LIKE '%" + text + "%' "
                + "OR CONCAT(co.`serie`,' - ', co.`numero`) LIKE '%" + text + "%' OR c.`nomcte` LIKE '%" + text + "%') AND v.`pagado` = " + jCheckBox1.isSelected() + " "
                + "ORDER BY v.`fecha` DESC, v.idventa desc;";
        System.out.println(control.Sql); 
        control.LlenarJTabla(model, control.Sql, 9);
        btnVerVenta.setEnabled(false);
        btnCobrar.setEnabled(false);
    }

    public void recargar() {
        int row = tablaVentas.getSelectedRow();
        cargarVentas();
        if (row >= 0) {
            tablaVentas.getSelectionModel().setSelectionInterval(row, row);
        }
    }

    private void visualizarVenta() {
        String idVenta = model.getValueAt(tablaVentas.getSelectedRow(), 0).toString();
        String comprobante = model.getValueAt(tablaVentas.getSelectedRow(), 2).toString();
        Map map = new HashMap();
        map.put("idVenta", idVenta);
        map.put("montoLetra", "Son " + new Numero_a_Letra().Convertir(model.getValueAt(tablaVentas.getSelectedRow(), 4).toString().replace(",", ""), false));
        if (comprobante.startsWith("Factura")) {
            //control.showReportDialog("Comprobante de Venta", "facturaVentaVista", map);
            control.showReportDialog("Comprobante de Venta", "FacturaVentaReal", map);
        } else if (comprobante.startsWith("Boleta")) {
            //control.showReportDialog("Comprobante de Venta", "boletaVentaVista", map);
            control.showReportDialog("Comprobante de Venta", "boletaVentaReal", map);
        } else if (comprobante.startsWith("Ticket")) {
            //control.showReportDialog("Comprobante de Venta", "ticket", map);
            control.showReportDialog("Comprobante de Venta", "ticket", map);
        } else if (comprobante.startsWith("Orden")) {
            control.showReportDialog("Comprobante de Venta", "ordenDePedido", map);
        }
        else if(comprobante.startsWith("Venta")){
            Map map1 = new HashMap();
            int idv=Integer.parseInt(idVenta);
            map1.put("idVenta", idv);
            map1.put("montoLetra", "" + new Numero_a_Letra().Convertir(model.getValueAt(tablaVentas.getSelectedRow(), 6).toString().replace(",", ""), false));
                    control.showReportDialog("Comprobante de Venta", "VentaLibre", map1);
                    //JOptionPane.showMessageDialog(null,"orden de pedido");
                }
        else {
            JOptionPane.showMessageDialog(this, "Esta venta aún no ha sido facturado");
        }
    }

    private void cobrar() {
        FrmRegistrarCobroVenta registrarCobroVenta = new FrmRegistrarCobroVenta(this);
        registrarCobroVenta.setIdVenta(model.getValueAt(tablaVentas.getSelectedRow(), 0).toString());
        FrmMain.escritorio.add(registrarCobroVenta, JLayeredPane.DEFAULT_LAYER);
        registrarCobroVenta.setLocation((FrmMain.escritorio.getWidth() - registrarCobroVenta.getWidth()) / 2, 20);
        registrarCobroVenta.setVisible(true);
    }

}
