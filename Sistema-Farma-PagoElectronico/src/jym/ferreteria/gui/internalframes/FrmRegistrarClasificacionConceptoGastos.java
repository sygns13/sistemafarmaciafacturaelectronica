/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jym.ferreteria.gui.internalframes;

import java.util.HashMap;
import java.util.Map;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import jym.ferreteria.clases.Controlador;
import jym.ferreteria.renders.CustomTableModel;

/**
 *
 * @author Omr
 */
public class FrmRegistrarClasificacionConceptoGastos extends javax.swing.JInternalFrame {

    private Controlador control = new Controlador();
    private JOptionPane jOptionPane = new JOptionPane();
    private CustomTableModel modeloClasificacion = new CustomTableModel();
    private CustomTableModel modeloConcepto = new CustomTableModel();
    private Map map = new HashMap();
    private String idClasificacion = "";
    private String idConcepto;

    /**
     * Creates new form RegistrarClasificacionConceptoGastos
     */
    public FrmRegistrarClasificacionConceptoGastos() {
        initComponents();
        this.setFrameIcon(new ImageIcon(this.getClass().getResource(Controlador.ICON_PATH)));
        llenarCombo();
        tClasificacion.setModel(modeloClasificacion);
        modeloClasificacion.setColumnIdentifiers(new String[]{"ID", "Clasificación de gasto"});
        control.hideTableColumn(tClasificacion, 0);
        tClasificacion.getColumnModel().getColumn(1).setPreferredWidth(100);

        modeloConcepto.setColumnIdentifiers(new String[]{"ID", "Clasificacion", "Concepto"});
        tConcepto.setModel(modeloConcepto);
        control.hideTableColumn(tConcepto, 0);
        tClasificacion.getSelectionModel().addListSelectionListener(new ListSelectionListener() {

            @Override
            public void valueChanged(ListSelectionEvent e) {
                btnEditarClasificacion.setEnabled(true);
                btnEliminarClasificacion.setEnabled(true);
            }
        });
        tConcepto.getSelectionModel().addListSelectionListener(new ListSelectionListener() {

            @Override
            public void valueChanged(ListSelectionEvent e) {
                btnEditarConcepto.setEnabled(true);
                btnEliminarConcepto.setEnabled(true);
            }
        });
        mostrarClasifiacion();
        mostrarConceptos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnNuevaClasificacion = new javax.swing.JButton();
        btnEliminarClasificacion = new javax.swing.JButton();
        btnCancelarClasificacion = new javax.swing.JButton();
        btnCancelarConcepto = new javax.swing.JButton();
        btnEliminarConcepto = new javax.swing.JButton();
        btnNuevoConcento = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tClasificacion = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tConcepto = new javax.swing.JTable();
        txtNombreClasificacion = new javax.swing.JTextField();
        txtNombreConcepto = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnEditarClasificacion = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        btnEditarConcepto = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        cboClasificacion = new javax.swing.JComboBox();

        FormListener formListener = new FormListener();

        setClosable(true);
        setIconifiable(true);
        setTitle("Administración de Clasificación y Conceptos de gastos");

        btnNuevaClasificacion.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnNuevaClasificacion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jym/ferreteria/imagenes/Files-New-File-icon.png"))); // NOI18N
        btnNuevaClasificacion.setMnemonic('N');
        btnNuevaClasificacion.setText("Nuevo");
        btnNuevaClasificacion.setName("btnNuevaClasificacion"); // NOI18N
        btnNuevaClasificacion.setSelected(true);
        btnNuevaClasificacion.addActionListener(formListener);

        btnEliminarClasificacion.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnEliminarClasificacion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jym/ferreteria/imagenes/trash.png"))); // NOI18N
        btnEliminarClasificacion.setMnemonic('l');
        btnEliminarClasificacion.setText("Eliminar");
        btnEliminarClasificacion.setName("btnEliminarClasificacion"); // NOI18N
        btnEliminarClasificacion.addActionListener(formListener);

        btnCancelarClasificacion.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnCancelarClasificacion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jym/ferreteria/imagenes/cancel.png"))); // NOI18N
        btnCancelarClasificacion.setMnemonic('C');
        btnCancelarClasificacion.setText("Cancelar");
        btnCancelarClasificacion.setName("btnCancelarClasificacion"); // NOI18N
        btnCancelarClasificacion.addActionListener(formListener);

        btnCancelarConcepto.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnCancelarConcepto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jym/ferreteria/imagenes/cancel.png"))); // NOI18N
        btnCancelarConcepto.setMnemonic('a');
        btnCancelarConcepto.setText("Cancelar");
        btnCancelarConcepto.setName("btnCancelarConcepto"); // NOI18N
        btnCancelarConcepto.addActionListener(formListener);

        btnEliminarConcepto.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnEliminarConcepto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jym/ferreteria/imagenes/trash.png"))); // NOI18N
        btnEliminarConcepto.setMnemonic('m');
        btnEliminarConcepto.setText("Eliminar");
        btnEliminarConcepto.setName("btnEliminarConcepto"); // NOI18N
        btnEliminarConcepto.addActionListener(formListener);

        btnNuevoConcento.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnNuevoConcento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jym/ferreteria/imagenes/Files-New-File-icon.png"))); // NOI18N
        btnNuevoConcento.setMnemonic('u');
        btnNuevoConcento.setText("Nuevo");
        btnNuevoConcento.setName("btnNuevoConcento"); // NOI18N
        btnNuevoConcento.addActionListener(formListener);

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        tClasificacion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Clasificacion"
            }
        ));
        tClasificacion.setName("tClasificacion"); // NOI18N
        tClasificacion.getTableHeader().setReorderingAllowed(false);
        tClasificacion.addMouseListener(formListener);
        jScrollPane1.setViewportView(tClasificacion);

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        tConcepto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Concepto"
            }
        ));
        tConcepto.setName("tConcepto"); // NOI18N
        tConcepto.addMouseListener(formListener);
        jScrollPane2.setViewportView(tConcepto);

        txtNombreClasificacion.setEditable(false);
        txtNombreClasificacion.setName("txtNombreClasificacion"); // NOI18N
        txtNombreClasificacion.addKeyListener(formListener);

        txtNombreConcepto.setEditable(false);
        txtNombreConcepto.setName("txtNombreConcepto"); // NOI18N
        txtNombreConcepto.addKeyListener(formListener);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel1.setText("Clasificación de Gasto:");
        jLabel1.setName("jLabel1"); // NOI18N

        jLabel2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel2.setText("Concepto de Gasto:");
        jLabel2.setName("jLabel2"); // NOI18N

        btnEditarClasificacion.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnEditarClasificacion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jym/ferreteria/imagenes/Edit.png"))); // NOI18N
        btnEditarClasificacion.setMnemonic('E');
        btnEditarClasificacion.setText("Editar");
        btnEditarClasificacion.setName("btnEditarClasificacion"); // NOI18N
        btnEditarClasificacion.addActionListener(formListener);

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator1.setName("jSeparator1"); // NOI18N

        btnEditarConcepto.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnEditarConcepto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jym/ferreteria/imagenes/Edit.png"))); // NOI18N
        btnEditarConcepto.setMnemonic('d');
        btnEditarConcepto.setText("Editar");
        btnEditarConcepto.setName("btnEditarConcepto"); // NOI18N
        btnEditarConcepto.addActionListener(formListener);

        jLabel3.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel3.setText("Clasificación:");
        jLabel3.setName("jLabel3"); // NOI18N

        cboClasificacion.setEnabled(false);
        cboClasificacion.setName("cboClasificacion"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnNuevaClasificacion, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEditarClasificacion, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEliminarClasificacion, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCancelarClasificacion, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNombreClasificacion, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 496, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnNuevoConcento, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEditarConcepto, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEliminarConcepto, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCancelarConcepto, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cboClasificacion, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 601, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtNombreConcepto)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNuevaClasificacion)
                    .addComponent(btnEliminarClasificacion)
                    .addComponent(btnCancelarClasificacion)
                    .addComponent(btnNuevoConcento)
                    .addComponent(btnEliminarConcepto)
                    .addComponent(btnCancelarConcepto)
                    .addComponent(btnEditarClasificacion)
                    .addComponent(btnEditarConcepto))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtNombreConcepto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(txtNombreClasificacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(cboClasificacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jSeparator1)
        );

        pack();
    }

    // Code for dispatching events from components to event handlers.

    private class FormListener implements java.awt.event.ActionListener, java.awt.event.KeyListener, java.awt.event.MouseListener {
        FormListener() {}
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            if (evt.getSource() == btnNuevaClasificacion) {
                FrmRegistrarClasificacionConceptoGastos.this.btnNuevaClasificacionActionPerformed(evt);
            }
            else if (evt.getSource() == btnEliminarClasificacion) {
                FrmRegistrarClasificacionConceptoGastos.this.btnEliminarClasificacionActionPerformed(evt);
            }
            else if (evt.getSource() == btnCancelarClasificacion) {
                FrmRegistrarClasificacionConceptoGastos.this.btnCancelarClasificacionActionPerformed(evt);
            }
            else if (evt.getSource() == btnCancelarConcepto) {
                FrmRegistrarClasificacionConceptoGastos.this.btnCancelarConceptoActionPerformed(evt);
            }
            else if (evt.getSource() == btnEliminarConcepto) {
                FrmRegistrarClasificacionConceptoGastos.this.btnEliminarConceptoActionPerformed(evt);
            }
            else if (evt.getSource() == btnNuevoConcento) {
                FrmRegistrarClasificacionConceptoGastos.this.btnNuevoConcentoActionPerformed(evt);
            }
            else if (evt.getSource() == btnEditarClasificacion) {
                FrmRegistrarClasificacionConceptoGastos.this.btnEditarClasificacionActionPerformed(evt);
            }
            else if (evt.getSource() == btnEditarConcepto) {
                FrmRegistrarClasificacionConceptoGastos.this.btnEditarConceptoActionPerformed(evt);
            }
        }

        public void keyPressed(java.awt.event.KeyEvent evt) {
            if (evt.getSource() == txtNombreClasificacion) {
                FrmRegistrarClasificacionConceptoGastos.this.txtNombreClasificacionKeyPressed(evt);
            }
            else if (evt.getSource() == txtNombreConcepto) {
                FrmRegistrarClasificacionConceptoGastos.this.txtNombreConceptoKeyPressed(evt);
            }
        }

        public void keyReleased(java.awt.event.KeyEvent evt) {
        }

        public void keyTyped(java.awt.event.KeyEvent evt) {
            if (evt.getSource() == txtNombreClasificacion) {
                FrmRegistrarClasificacionConceptoGastos.this.txtNombreClasificacionKeyTyped(evt);
            }
            else if (evt.getSource() == txtNombreConcepto) {
                FrmRegistrarClasificacionConceptoGastos.this.txtNombreConceptoKeyTyped(evt);
            }
        }

        public void mouseClicked(java.awt.event.MouseEvent evt) {
            if (evt.getSource() == tClasificacion) {
                FrmRegistrarClasificacionConceptoGastos.this.tClasificacionMouseClicked(evt);
            }
            else if (evt.getSource() == tConcepto) {
                FrmRegistrarClasificacionConceptoGastos.this.tConceptoMouseClicked(evt);
            }
        }

        public void mouseEntered(java.awt.event.MouseEvent evt) {
        }

        public void mouseExited(java.awt.event.MouseEvent evt) {
        }

        public void mousePressed(java.awt.event.MouseEvent evt) {
        }

        public void mouseReleased(java.awt.event.MouseEvent evt) {
        }
    }// </editor-fold>//GEN-END:initComponents

    private void btnNuevaClasificacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevaClasificacionActionPerformed
        this.crearClasificacion();
    }//GEN-LAST:event_btnNuevaClasificacionActionPerformed

    private void btnEliminarClasificacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarClasificacionActionPerformed
        eliminarClasificacion();
    }//GEN-LAST:event_btnEliminarClasificacionActionPerformed

    private void tClasificacionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tClasificacionMouseClicked
        if (evt.getClickCount() > 1) {
            mostrarConceptos();
        }
    }//GEN-LAST:event_tClasificacionMouseClicked

    private void btnNuevoConcentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoConcentoActionPerformed
        crearConceptoGasto();
    }//GEN-LAST:event_btnNuevoConcentoActionPerformed

    private void btnCancelarClasificacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarClasificacionActionPerformed
        txtNombreClasificacion.setText("");
        txtNombreClasificacion.setEditable(false);
        tClasificacion.setEnabled(true);
        btnNuevaClasificacion.setEnabled(true);
        btnNuevaClasificacion.setText("Nuevo");
        btnEditarClasificacion.setText("Editar");
        btnNuevaClasificacion.setMnemonic('N');
        btnEditarClasificacion.setMnemonic('E');
        mostrarClasifiacion();
    }//GEN-LAST:event_btnCancelarClasificacionActionPerformed

    private void btnEditarClasificacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarClasificacionActionPerformed
        modificarClasificacion();
    }//GEN-LAST:event_btnEditarClasificacionActionPerformed

    private void btnEditarConceptoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarConceptoActionPerformed
        modificarConceptoGasto();
    }//GEN-LAST:event_btnEditarConceptoActionPerformed

    private void txtNombreClasificacionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreClasificacionKeyPressed
        if (control.isEnterKey(evt)) {
            if (btnNuevaClasificacion.isEnabled()) {
                crearClasificacion();
            } else {
                modificarClasificacion();
            }
        }
    }//GEN-LAST:event_txtNombreClasificacionKeyPressed

    private void txtNombreClasificacionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreClasificacionKeyTyped
        control.Longitudtx(txtNombreClasificacion, evt, 45);
    }//GEN-LAST:event_txtNombreClasificacionKeyTyped

    private void btnEliminarConceptoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarConceptoActionPerformed
        eliminarConcepto();
    }//GEN-LAST:event_btnEliminarConceptoActionPerformed

    private void txtNombreConceptoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreConceptoKeyTyped
        control.Longitudtx(txtNombreConcepto, evt, 45);
    }//GEN-LAST:event_txtNombreConceptoKeyTyped

    private void txtNombreConceptoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreConceptoKeyPressed
        if (control.isEnterKey(evt)) {
            if (btnNuevoConcento.isEnabled()) {
                crearConceptoGasto();
            } else {
                modificarConceptoGasto();
            }
        }
    }//GEN-LAST:event_txtNombreConceptoKeyPressed

    private void btnCancelarConceptoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarConceptoActionPerformed
        txtNombreConcepto.setText("");
        btnNuevoConcento.setEnabled(true);
        txtNombreConcepto.setEditable(false);
        tConcepto.setEnabled(true);
        cboClasificacion.setEnabled(false);

        btnNuevoConcento.setText("Nuevo");
        btnEditarConcepto.setText("Editar");
        btnNuevoConcento.setMnemonic('u');
        btnEditarConcepto.setMnemonic('d');
        mostrarConceptos();
    }//GEN-LAST:event_btnCancelarConceptoActionPerformed

    private void tConceptoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tConceptoMouseClicked
        if (evt.getClickCount() > 1) {
            btnEditarConcepto.doClick();
        }
    }//GEN-LAST:event_tConceptoMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelarClasificacion;
    private javax.swing.JButton btnCancelarConcepto;
    private javax.swing.JButton btnEditarClasificacion;
    private javax.swing.JButton btnEditarConcepto;
    private javax.swing.JButton btnEliminarClasificacion;
    private javax.swing.JButton btnEliminarConcepto;
    private javax.swing.JButton btnNuevaClasificacion;
    private javax.swing.JButton btnNuevoConcento;
    private javax.swing.JComboBox cboClasificacion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable tClasificacion;
    private javax.swing.JTable tConcepto;
    private javax.swing.JTextField txtNombreClasificacion;
    private javax.swing.JTextField txtNombreConcepto;
    // End of variables declaration//GEN-END:variables

    private void mostrarClasifiacion() {
        control.Sql = "SELECT * FROM clasificaciongastos WHERE `idClasificacionGastos`<>1 order by nombre asc; ";
        control.LlenarJTabla(modeloClasificacion, control.Sql, 2);
        btnEditarClasificacion.setEnabled(false);
        btnEliminarClasificacion.setEnabled(false);

    }

    private void mostrarConceptos() {

        control.Sql = "SELECT c.idconceptogastos, cg.nombre, c.nombre "
                + "from conceptogastos c, clasificaciongastos cg "
                + "where cg.idclasificaciongastos=c.idclasificaciongastos  order by cg.nombre,c.nombre asc";

        control.LlenarJTabla(modeloConcepto, control.Sql, 3);
        btnEditarConcepto.setEnabled(false);
        btnEliminarConcepto.setEnabled(false);

    }

    private void crearClasificacion() {
        if (btnNuevaClasificacion.getText().equals("Nuevo")) {
            btnNuevaClasificacion.setText("Guardar");
            btnNuevaClasificacion.setMnemonic('G');
            txtNombreClasificacion.setEditable(true);
            tClasificacion.setEnabled(false);
            btnEditarClasificacion.setEnabled(false);
            btnEliminarClasificacion.setEnabled(false);
            txtNombreClasificacion.requestFocus();
        } else {
            if (txtNombreClasificacion.getText().trim().length() == 0) {
                JOptionPane.showMessageDialog(rootPane, "Indique el nombre de la Clasificación", "Mensaje", 2);
                txtNombreClasificacion.requestFocus();
            } else {
                control.Sql = "call ClasificacionGastos('0','" + txtNombreClasificacion.getText() + "','0')";
                String resu = control.CrearRegistroDev(control.Sql);
                if (resu.equals("1")) {
                    btnNuevaClasificacion.setText("Nuevo");
                    btnNuevaClasificacion.setMnemonic('N');
                    txtNombreClasificacion.setEditable(false);
                    txtNombreClasificacion.setText("");
                    tClasificacion.setEnabled(true);
                    mostrarClasifiacion();

                    JOptionPane.showMessageDialog(rootPane, "La clasificación se ha registrado correctamente", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
                    llenarCombo();
                    mostrarConceptos();
                } else {
                    JOptionPane.showMessageDialog(rootPane, resu, "Mensaje", JOptionPane.WARNING_MESSAGE);
                    txtNombreClasificacion.grabFocus();
                }

            }

        }

    }

    private void modificarClasificacion() {
        if (btnEditarClasificacion.getText().equals("Editar")) {
            btnEditarClasificacion.setText("Guardar");
            btnEditarClasificacion.setMnemonic('G');
            txtNombreClasificacion.setEditable(true);
            txtNombreClasificacion.setText(modeloClasificacion.getValueAt(tClasificacion.getSelectedRow(), 1).toString());
            tClasificacion.setEnabled(false);
            btnNuevaClasificacion.setEnabled(false);
            btnEliminarClasificacion.setEnabled(false);
            txtNombreClasificacion.requestFocus();
        } else {
            if (txtNombreClasificacion.getText().trim().length() == 0) {
                JOptionPane.showMessageDialog(rootPane, "Indique el nombre de la Clasificación", "Mensaje", 2);
                txtNombreClasificacion.requestFocus();
            } else {
                control.Sql = "call ClasificacionGastos('" + modeloClasificacion.getValueAt(tClasificacion.getSelectedRow(), 0).toString() + "','" + txtNombreClasificacion.getText() + "','1')";
                String resu = control.CrearRegistroDev(control.Sql);
                if (resu.equals("2")) {
                    btnEditarClasificacion.setText("Editar");
                    btnEditarClasificacion.setMnemonic('E');
                    txtNombreClasificacion.setEditable(false);
                    btnNuevaClasificacion.setEnabled(true);
                    txtNombreClasificacion.setText("");
                    tClasificacion.setEnabled(true);
                    mostrarClasifiacion();
                    JOptionPane.showMessageDialog(rootPane, "La clasificación se ha actualizado correctamente", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
                    llenarCombo();
                    mostrarConceptos();
                } else {
                    JOptionPane.showMessageDialog(rootPane, resu, "Mensaje", JOptionPane.WARNING_MESSAGE);
                    txtNombreClasificacion.grabFocus();
                }

            }

        }
    }

    private void eliminarClasificacion() {
        control.fila = tClasificacion.getSelectedRow();
        if (control.fila >= 0) {
            idClasificacion = tClasificacion.getValueAt(control.fila, 0).toString();
            if (JOptionPane.showConfirmDialog(rootPane, "¿Confirma que desea eliminar la clasificación seleccionada?", "Confirmar", 0) == 0) {
                control.Sql = "call ClasificacionGastos('" + idClasificacion + "','" + txtNombreClasificacion.getText() + "','2')";
                boolean ejecutar = control.ejecutar(control.Sql);
                if (ejecutar) {
                    mostrarClasifiacion();
                    llenarCombo();
                    mostrarConceptos();
                } else {
                    JOptionPane.showMessageDialog(rootPane, "La Clasificación de Gasto no se puede eliminar por que actualmente está en uso", "Mensaje", JOptionPane.WARNING_MESSAGE);

                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Seleccione la fila a eliminar", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
        }
    }

    private void crearConceptoGasto() {
        if (btnNuevoConcento.getText().equals("Nuevo")) {
            btnNuevoConcento.setText("Guardar");
            btnNuevoConcento.setMnemonic('G');
            txtNombreConcepto.setEditable(true);
            cboClasificacion.setEnabled(true);

            tConcepto.setEnabled(false);
            btnEditarConcepto.setEnabled(false);
            btnEliminarConcepto.setEnabled(false);
            txtNombreConcepto.requestFocus();
        } else {
            if (txtNombreConcepto.getText().trim().length() == 0) {
                JOptionPane.showMessageDialog(rootPane, "Indique el nombre del concepto de gasto", "Mensaje", 2);
                txtNombreConcepto.requestFocus();

            } else {
                if (cboClasificacion.getSelectedIndex() >= 0) {
                    idClasificacion = map.get(cboClasificacion.getSelectedIndex()).toString();
                    control.Sql = "call ConceptosGasto('0','" + txtNombreConcepto.getText() + "','" + idClasificacion + "','0')";
                    String resu = control.CrearRegistroDev(control.Sql);
                    if (resu.equals("1")) {
                        btnNuevoConcento.setText("Nuevo");
                        btnNuevoConcento.setMnemonic('u');
                        txtNombreConcepto.setEditable(false);
                        txtNombreConcepto.setText("");
                        tConcepto.setEnabled(true);
                        cboClasificacion.setEnabled(false);
                        try {
                            cboClasificacion.setSelectedIndex(0);
                        } catch (Exception e) {
                        }
                        actualizarComboGastos();
                        mostrarConceptos();
                        JOptionPane.showMessageDialog(rootPane, "El Concepto de gasto se ha registrado correctamente", "Mensaje", JOptionPane.INFORMATION_MESSAGE);

                    } else {
                        JOptionPane.showMessageDialog(rootPane, resu, "Mensaje", JOptionPane.WARNING_MESSAGE);
                        txtNombreConcepto.grabFocus();
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Indique la clasificación a la que pertenece el concepto");
                }

            }

        }

    }

    private void modificarConceptoGasto() {
        if (btnEditarConcepto.getText().equals("Editar")) {
            btnEditarConcepto.setText("Guardar");
            btnEditarConcepto.setMnemonic('G');
            txtNombreConcepto.setEditable(true);
            txtNombreConcepto.setText(modeloConcepto.getValueAt(tConcepto.getSelectedRow(), 2).toString());
            cboClasificacion.setSelectedItem(modeloConcepto.getValueAt(tConcepto.getSelectedRow(), 1).toString());
            cboClasificacion.setEnabled(true);
            tConcepto.setEnabled(false);
            btnNuevoConcento.setEnabled(false);
            btnEliminarConcepto.setEnabled(false);
            txtNombreConcepto.requestFocus();
        } else {
            if (txtNombreConcepto.getText().trim().length() == 0) {
                JOptionPane.showMessageDialog(rootPane, "Indique el nombre del concepto de gasto", "Mensaje", 2);
                txtNombreConcepto.requestFocus();

            } else {
                idClasificacion = map.get(cboClasificacion.getSelectedIndex()).toString();
                control.Sql = "call ConceptosGasto('" + modeloConcepto.getValueAt(tConcepto.getSelectedRow(), 0).toString() + "','" + txtNombreConcepto.getText() + "','" + idClasificacion + "','1')";
                String resu = control.CrearRegistroDev(control.Sql);
                if (resu.equals("2")) {
                    btnEditarConcepto.setText("Editar");
                    btnEditarConcepto.setMnemonic('d');
                    txtNombreConcepto.setEditable(false);
                    btnNuevoConcento.setEnabled(true);
                    txtNombreConcepto.setText("");
                    tConcepto.setEnabled(true);
                    cboClasificacion.setEnabled(false);
                    try {
                        cboClasificacion.setSelectedIndex(0);
                    } catch (Exception e) {
                    }
                    actualizarComboGastos();
                    mostrarConceptos();
                    JOptionPane.showMessageDialog(rootPane, "El Concepto de gasto se ha registrado correctamente", "Mensaje", JOptionPane.INFORMATION_MESSAGE);

                } else {
                    JOptionPane.showMessageDialog(rootPane, resu, "Mensaje", JOptionPane.WARNING_MESSAGE);
                    txtNombreConcepto.grabFocus();
                }

            }

        }

    }

    private void eliminarConcepto() {
        control.fila = tConcepto.getSelectedRow();
        if (control.fila >= 0) {
            idConcepto = tConcepto.getValueAt(control.fila, 0).toString();
            if (JOptionPane.showConfirmDialog(rootPane, "¿Confirma que desea eliminar el concepto seleccionado?", "Confirmar", 0) == 0) {
                control.Sql = "call ConceptosGasto('" + idConcepto + "','','" + 0 + "','2')";

                boolean ejecutar = control.ejecutar(control.Sql);
                if (ejecutar) {
                    mostrarConceptos();
                    actualizarComboGastos();
                } else {
                    JOptionPane.showMessageDialog(rootPane, "El concepto de gasto no se puede eliminar por que actualmente está en uso", "Mensaje", JOptionPane.WARNING_MESSAGE);

                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Seleccione la fila a eliminar", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
        }
    }

    private void llenarCombo() {
        int selectedIndex = cboClasificacion.getSelectedIndex();
        if (selectedIndex < 0) {
            selectedIndex = 0;
        }
        control.fillComboBox("SELECT `idClasificacionGastos`, `nombre`,IF(`idClasificacionGastos`=1, 0, 1) AS orden "
                + "FROM `clasificaciongastos` ORDER BY orden, `nombre`;", cboClasificacion, map);
        try {
            cboClasificacion.setSelectedIndex(selectedIndex);
        } catch (Exception e) {
        }
    }

    private void actualizarComboGastos() {
        if (FrmRegistrarGastos.cboConceptos != null) {
            try {
                int index = FrmRegistrarGastos.cboConceptos.getSelectedIndex();
                FrmRegistrarGastos.llenarCombo();
                FrmRegistrarGastos.cboConceptos.setSelectedIndex(index);
            } catch (Exception e) {
            }
        }
    }

}
