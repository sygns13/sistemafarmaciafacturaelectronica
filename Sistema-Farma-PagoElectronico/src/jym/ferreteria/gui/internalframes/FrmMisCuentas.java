/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jym.ferreteria.gui.internalframes;

import java.awt.event.KeyEvent;
import java.util.HashMap;
import java.util.Map;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import jym.ferreteria.clases.Controlador;
import jym.ferreteria.renders.CustomTableModel;

/**
 *
 * @author Omr
 */
public class FrmMisCuentas extends javax.swing.JInternalFrame {

    private static Controlador control = new Controlador();
    private static Map map = new HashMap();
    private CustomTableModel model = new CustomTableModel();

    /**
     * Creates new form FrmMisCuentas
     */
    public FrmMisCuentas() {
        initComponents();
        this.setFrameIcon(new ImageIcon(this.getClass().getResource(Controlador.ICON_PATH)));
        model.setColumnIdentifiers(new String[]{"Id", "Banco", "Número cuenta"});
        tablaCuentas.setModel(model);
        control.hideTableColumn(tablaCuentas, 0);
        habilitar(false);
        recargarBancos();
        cargarCuentasBancarias();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnNuevo = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cboBanco = new javax.swing.JComboBox();
        txtNumeroCuenta = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaCuentas = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setTitle("Mis cuentas bancarias");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        btnNuevo.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jym/ferreteria/imagenes/Document.png"))); // NOI18N
        btnNuevo.setMnemonic('N');
        btnNuevo.setText("Nuevo");
        btnNuevo.setPreferredSize(new java.awt.Dimension(100, 33));
        btnNuevo.setSelected(true);
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });
        jPanel1.add(btnNuevo);

        btnModificar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jym/ferreteria/imagenes/Edit.png"))); // NOI18N
        btnModificar.setMnemonic('M');
        btnModificar.setText("Modificar");
        btnModificar.setPreferredSize(new java.awt.Dimension(118, 33));
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });
        jPanel1.add(btnModificar);

        btnEliminar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jym/ferreteria/imagenes/trash.png"))); // NOI18N
        btnEliminar.setMnemonic('E');
        btnEliminar.setText("Eliminar");
        btnEliminar.setPreferredSize(new java.awt.Dimension(112, 33));
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        jPanel1.add(btnEliminar);

        btnCancelar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jym/ferreteria/imagenes/cancel.png"))); // NOI18N
        btnCancelar.setMnemonic('C');
        btnCancelar.setText("Cancelar");
        btnCancelar.setPreferredSize(new java.awt.Dimension(116, 33));
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        jPanel1.add(btnCancelar);

        btnSalir.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jym/ferreteria/imagenes/salir.png"))); // NOI18N
        btnSalir.setMnemonic('S');
        btnSalir.setText("Salir");
        btnSalir.setPreferredSize(new java.awt.Dimension(92, 33));
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        jPanel1.add(btnSalir);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel1.setText("Banco: ");

        jLabel2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel2.setText("N° cuenta: ");

        cboBanco.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cboBancoKeyPressed(evt);
            }
        });

        txtNumeroCuenta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNumeroCuentaKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cboBanco, 0, 447, Short.MAX_VALUE)
                    .addComponent(txtNumeroCuenta))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cboBanco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNumeroCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5))
        );

        tablaCuentas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaCuentas.getTableHeader().setReorderingAllowed(false);
        tablaCuentas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaCuentasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaCuentas);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 575, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        registrarCuenta();
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void tablaCuentasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaCuentasMouseClicked
        if (evt.getClickCount() > 1 && tablaCuentas.isEnabled()) {
            modificarCuenta();
        }
    }//GEN-LAST:event_tablaCuentasMouseClicked

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        eliminarCuenta();
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        modificarCuenta();
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        cancelar();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void cboBancoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cboBancoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtNumeroCuenta.requestFocus();
        }
    }//GEN-LAST:event_cboBancoKeyPressed

    private void txtNumeroCuentaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroCuentaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (btnNuevo.isEnabled()) {
                btnNuevo.doClick();
            } else {
                btnModificar.doClick();
            }
        }
    }//GEN-LAST:event_txtNumeroCuentaKeyPressed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnSalir;
    private static javax.swing.JComboBox cboBanco;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaCuentas;
    private javax.swing.JTextField txtNumeroCuenta;
    // End of variables declaration//GEN-END:variables

    public static void recargarBancos() {

        Object selectedItem = cboBanco.getSelectedItem();
        control.fillComboBox("SELECT `idBanco`, `nombre` FROM `banco` ORDER BY `nombre`;", cboBanco, map);
        if (selectedItem != null) {
            cboBanco.setSelectedItem(selectedItem);
        } else {
            try {
                cboBanco.setSelectedIndex(0);
            } catch (Exception e) {
            }
        }

    }

    private void habilitar(boolean b) {
        cboBanco.setEnabled(b);
        txtNumeroCuenta.setEditable(b);
        txtNumeroCuenta.setText("");
        try {
            cboBanco.setSelectedIndex(0);
        } catch (Exception e) {
        }
    }

    private void registrarCuenta() {
        if (btnNuevo.getText().equals("Nuevo")) {
            btnNuevo.setText("Grabar");
            btnNuevo.setMnemonic('G');
            btnModificar.setEnabled(false);
            btnEliminar.setEnabled(false);
            tablaCuentas.setEnabled(false);
            habilitar(true);
            cboBanco.requestFocus();
        } else {
            if (cboBanco.getSelectedIndex() >= 0) {
                if (!txtNumeroCuenta.getText().trim().isEmpty()) {
                    boolean ejecutar = control.ejecutar(String.format("INSERT INTO miscuentas VALUES(NULL,%s,'%s');", map.get(cboBanco.getSelectedIndex()).toString(), txtNumeroCuenta.getText()));
                    if (ejecutar) {
                        cargarCuentasBancarias();
                        habilitar(false);
                        btnNuevo.setText("Nuevo");
                        btnNuevo.setMnemonic('N');
                        btnModificar.setEnabled(true);
                        btnEliminar.setEnabled(true);
                        tablaCuentas.setEnabled(true);
                        JOptionPane.showMessageDialog(this, "La cuenta bancaria se ha guardado satisfactoriamente", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
                        try {
                            FrmRegistrarCobroVenta.recargarCuentaBancaria();
                        } catch (Exception e) {
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "Ocurrió un error al registrar la cuenta bancaria", "Mensaje", JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Indique el número de la cuenta bancaria", "Mensaje", JOptionPane.WARNING_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Indique el banco al que pertenece la cuenta bancaria", "Mensaje", JOptionPane.WARNING_MESSAGE);
            }
        }
    }

    private void modificarCuenta() {
        if (tablaCuentas.getSelectedRow() >= 0) {
            if (btnModificar.getText().equals("Modificar")) {
                btnModificar.setText("Grabar");
                btnModificar.setMnemonic('G');
                btnNuevo.setEnabled(false);
                btnEliminar.setEnabled(false);
                tablaCuentas.setEnabled(false);
                habilitar(true);
                cboBanco.setSelectedItem(model.getValueAt(tablaCuentas.getSelectedRow(), 1));
                txtNumeroCuenta.setText(model.getValueAt(tablaCuentas.getSelectedRow(), 2).toString());
                cboBanco.requestFocus();
            } else {
                if (cboBanco.getSelectedIndex() >= 0) {
                    if (!txtNumeroCuenta.getText().trim().isEmpty()) {
                        boolean ejecutar = control.ejecutar(String.format("UPDATE miscuentas m SET m.`idBanco`=%s, m.`numeroCuenta`='%s' WHERE m.`idMisCuentas`=%s;",
                                map.get(cboBanco.getSelectedIndex()).toString(), txtNumeroCuenta.getText(), model.getValueAt(tablaCuentas.getSelectedRow(), 0).toString()));
                        if (ejecutar) {
                            cargarCuentasBancarias();
                            habilitar(false);
                            btnModificar.setText("Modificar");
                            btnModificar.setMnemonic('M');
                            btnNuevo.setEnabled(true);
                            btnEliminar.setEnabled(true);
                            tablaCuentas.setEnabled(true);
                            JOptionPane.showMessageDialog(this, "La cuenta bancaria se ha guardado satisfactoriamente", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
                            try {
                                FrmRegistrarCobroVenta.recargarCuentaBancaria();
                            } catch (Exception e) {
                            }
                        } else {
                            JOptionPane.showMessageDialog(this, "Ocurrió un error al registrar la cuenta bancaria", "Mensaje", JOptionPane.ERROR_MESSAGE);
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "Indique el número de la cuenta bancaria", "Mensaje", JOptionPane.WARNING_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Indique el banco al que pertenece la cuenta bancaria", "Mensaje", JOptionPane.WARNING_MESSAGE);
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Seleccione la cuenta bancaria que desea modificar", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
        }
    }

    private void cargarCuentasBancarias() {
        control.LlenarJTabla(model, "SELECT m.`idMisCuentas`, b.`nombre`, m.`numeroCuenta` FROM miscuentas m, banco b "
                + "WHERE m.`idBanco`=b.`idBanco` ORDER BY b.`nombre`, m.`numeroCuenta`;", 3);
    }

    private void eliminarCuenta() {
        if (tablaCuentas.getSelectedRow() >= 0) {
            int showConfirmDialog = JOptionPane.showConfirmDialog(this, "¿Confirma que desea eliminar la cuenta bancaria seleccionada?", "Mensaje", JOptionPane.YES_NO_OPTION);
            if (showConfirmDialog == JOptionPane.YES_OPTION) {
                boolean ejecutar = control.ejecutar(String.format("DELETE FROM miscuentas WHERE `idMisCuentas`=%s;", model.getValueAt(tablaCuentas.getSelectedRow(), 0).toString()));
                if (ejecutar) {
                    cargarCuentasBancarias();
                    habilitar(false);
                    try {
                        FrmRegistrarCobroVenta.recargarCuentaBancaria();
                    } catch (Exception e) {
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "No se pudo eliminar esta cuenta bancaria ya que actualmente tiene datos en uso", "Mensaje", JOptionPane.WARNING_MESSAGE);
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Seleccione la cuenta bancaria que desea eliminar", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
        }
    }

    private void cancelar() {
        cargarCuentasBancarias();
        habilitar(false);
        btnNuevo.setEnabled(true);
        btnModificar.setEnabled(true);
        btnEliminar.setEnabled(true);
        btnNuevo.setMnemonic('N');
        btnModificar.setMnemonic('M');
        btnNuevo.setText("Nuevo");
        btnModificar.setText("Modificar");
        tablaCuentas.setEnabled(true);
    }
}
