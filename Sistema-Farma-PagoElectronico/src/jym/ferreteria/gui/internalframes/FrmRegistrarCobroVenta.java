/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jym.ferreteria.gui.internalframes;

import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import jym.ferreteria.clases.Controlador;
import jym.ferreteria.renders.CustomTableModel;

/**
 *
 * @author Omr
 */
public class FrmRegistrarCobroVenta extends javax.swing.JInternalFrame {

    private CustomTableModel model = new CustomTableModel();
    private static Controlador control = new Controlador();
    private final FrmListadoCuentasPorCobrar frmListadoCuentasPorCobrar;
    private String idVenta;

    private static Map mapTipoTarjeta = new HashMap();
    private static Map mapBanco = new HashMap();
    private static final Map mapCuentaBancaria = new HashMap();
    private static boolean cboBancoIsFill = false;
    private double montoEditando = 0;
    private boolean pagado;
    private String idPagoCliente = null;

    /**
     * Creates new form FrmRegistrarCobroVenta
     *
     * @param frmListadoCuentasPorCobrar
     */
    public FrmRegistrarCobroVenta(FrmListadoCuentasPorCobrar frmListadoCuentasPorCobrar) {
        initComponents();
        this.frmListadoCuentasPorCobrar = frmListadoCuentasPorCobrar;
        model.setColumnIdentifiers(new String[]{"Id", "Fecha", "Modo pago", "Banco / Tarjeta", "Num. Tarjeta / Cheque / Cuenta", "Importe"});
        tablaDetalle.setModel(model);
        control.hideTableColumn(tablaDetalle, 0);
        control.tableMaxWidthColumn(tablaDetalle, 80);
        control.tableMaxWidthColumn(tablaDetalle, 100, 2);
        control.tableMaxWidthColumn(tablaDetalle, 120, 5);
        cboTipoPago.setSelectedIndex(0);
        tablaDetalle.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                btnEliminar.setEnabled(true);
            }
        });
        jDateChooser1.setDate(new Date());
        ((JTextField) jDateChooser1.getDateEditor()).addKeyListener(new KeyAdapter() {

            @Override
            public void keyPressed(KeyEvent e) {
                if (e.getKeyCode() == KeyEvent.VK_ENTER) {
                    cboTipoPago.requestFocus();
                }
            }

        });
        recargarBancos();
        recargarTipoTarjeta();
        recargarCuentaBancaria();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lblComprobante = new javax.swing.JLabel();
        lblCliente = new javax.swing.JLabel();
        lblRUC = new javax.swing.JLabel();
        lblImporte = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaDetalle = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtImporteCobrado = new javax.swing.JTextField();
        txtImportePendiente = new javax.swing.JTextField();
        btnGuardar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        txtNumeroCheque = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtNumeroTarjeta = new javax.swing.JTextField();
        cboTipoPago = new javax.swing.JComboBox();
        txtMontoAbonado = new javax.swing.JTextField();
        lblTipoTarjeta = new javax.swing.JLabel();
        cboTipoTarjeta = new javax.swing.JComboBox();
        lblMontoAbonado = new javax.swing.JLabel();
        lblBanco = new javax.swing.JLabel();
        cboBanco = new javax.swing.JComboBox();
        lblCuenta = new javax.swing.JLabel();
        cboCuenta = new javax.swing.JComboBox();
        lblNumeroCheque = new javax.swing.JLabel();
        lblNumeroTarjeta = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Registrar cobro de ventas");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos generales", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel1.setText("Cliente: ");

        jLabel2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel2.setText("Comprobante: ");

        jLabel3.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel3.setText("RUC:");

        jLabel4.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel4.setText("Importe: ");

        lblComprobante.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblComprobante.setForeground(new java.awt.Color(153, 0, 153));
        lblComprobante.setText("jLabel5");

        lblCliente.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblCliente.setForeground(new java.awt.Color(153, 0, 153));
        lblCliente.setText("jLabel5");

        lblRUC.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblRUC.setForeground(new java.awt.Color(153, 0, 153));
        lblRUC.setText("jLabel5");

        lblImporte.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblImporte.setForeground(new java.awt.Color(153, 0, 153));
        lblImporte.setText("jLabel5");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblCliente, javax.swing.GroupLayout.DEFAULT_SIZE, 496, Short.MAX_VALUE)
                    .addComponent(lblComprobante, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(lblRUC, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblImporte, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(5, 5, 5))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(lblCliente)
                    .addComponent(lblRUC))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(lblComprobante)
                    .addComponent(lblImporte))
                .addGap(5, 5, 5))
        );

        tablaDetalle.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaDetalle.getTableHeader().setReorderingAllowed(false);
        tablaDetalle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaDetalleMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaDetalle);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel5.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel5.setText("Importe cobrado:");

        jLabel6.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel6.setText("Importe pendiente:");

        txtImporteCobrado.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txtImporteCobrado.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtImporteCobrado.setText("0.00");
        txtImporteCobrado.setEnabled(false);

        txtImportePendiente.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txtImportePendiente.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtImportePendiente.setText("0.00");
        txtImportePendiente.setEnabled(false);

        btnGuardar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jym/ferreteria/imagenes/Actions-document-save-icon.png"))); // NOI18N
        btnGuardar.setMnemonic('G');
        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnEliminar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jym/ferreteria/imagenes/trash.png"))); // NOI18N
        btnEliminar.setMnemonic('E');
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnCancelar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jym/ferreteria/imagenes/cancel.png"))); // NOI18N
        btnCancelar.setMnemonic('C');
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnSalir.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jym/ferreteria/imagenes/salir.png"))); // NOI18N
        btnSalir.setMnemonic('S');
        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtImporteCobrado)
                            .addComponent(txtImportePendiente, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnGuardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
                            .addComponent(btnSalir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtImporteCobrado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtImportePendiente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGuardar)
                    .addComponent(btnEliminar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelar)
                    .addComponent(btnSalir))
                .addGap(33, 33, 33))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        txtNumeroCheque.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNumeroChequeKeyPressed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel11.setText("Tipo pago:");

        txtNumeroTarjeta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNumeroTarjetaKeyPressed(evt);
            }
        });

        cboTipoPago.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cboTipoPago.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Efectivo", "Tarjeta", "Cheque", "Cuenta Bancaria" }));
        cboTipoPago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboTipoPagoActionPerformed(evt);
            }
        });
        cboTipoPago.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cboTipoPagoKeyPressed(evt);
            }
        });

        txtMontoAbonado.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        txtMontoAbonado.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtMontoAbonado.setText("0.00");
        txtMontoAbonado.setMinimumSize(new java.awt.Dimension(6, 20));
        txtMontoAbonado.setPreferredSize(new java.awt.Dimension(6, 20));
        txtMontoAbonado.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtMontoAbonadoCaretUpdate(evt);
            }
        });
        txtMontoAbonado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMontoAbonadoKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMontoAbonadoKeyTyped(evt);
            }
        });

        lblTipoTarjeta.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        lblTipoTarjeta.setText("Tarjeta:");

        cboTipoTarjeta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cboTipoTarjetaKeyPressed(evt);
            }
        });

        lblMontoAbonado.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        lblMontoAbonado.setText("Monto abonado:");

        lblBanco.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        lblBanco.setText("Banco:");

        cboBanco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboBancoActionPerformed(evt);
            }
        });
        cboBanco.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cboBancoKeyPressed(evt);
            }
        });

        lblCuenta.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        lblCuenta.setText("Cuenta:");

        cboCuenta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cboCuentaKeyPressed(evt);
            }
        });

        lblNumeroCheque.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        lblNumeroCheque.setText("N° cheque:");

        lblNumeroTarjeta.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        lblNumeroTarjeta.setText("N° tarjeta:");

        jLabel12.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel12.setText("Fecha:");

        jDateChooser1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblMontoAbonado, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
                    .addComponent(lblNumeroTarjeta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblNumeroCheque, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblCuenta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblBanco, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblTipoTarjeta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE))
                .addGap(4, 4, 4)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNumeroCheque)
                    .addComponent(txtMontoAbonado, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtNumeroTarjeta)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cboTipoPago, 0, 256, Short.MAX_VALUE)
                    .addComponent(cboTipoTarjeta, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cboBanco, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cboCuenta, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(53, 53, 53))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, 21, Short.MAX_VALUE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(cboTipoPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTipoTarjeta)
                    .addComponent(cboTipoTarjeta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBanco)
                    .addComponent(cboBanco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCuenta))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNumeroCheque)
                    .addComponent(txtNumeroCheque, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNumeroTarjeta)
                    .addComponent(txtNumeroTarjeta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMontoAbonado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMontoAbonado))
                .addGap(5, 5, 5))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1))
                .addGap(5, 5, 5))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(5, 5, 5)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                .addGap(5, 5, 5))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNumeroChequeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroChequeKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtMontoAbonado.requestFocus();
            txtMontoAbonado.selectAll();
        }
    }//GEN-LAST:event_txtNumeroChequeKeyPressed

    private void txtNumeroTarjetaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroTarjetaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtMontoAbonado.requestFocus();
            txtMontoAbonado.selectAll();
        }
    }//GEN-LAST:event_txtNumeroTarjetaKeyPressed

    private void cboTipoPagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboTipoPagoActionPerformed
        if (cboTipoPago.getSelectedIndex() == 0) {
            cboTipoTarjeta.setVisible(false);
            cboBanco.setVisible(false);
            cboCuenta.setVisible(false);
            txtNumeroCheque.setVisible(false);
            txtNumeroTarjeta.setVisible(false);
            lblTipoTarjeta.setVisible(false);
            lblBanco.setVisible(false);
            lblCuenta.setVisible(false);
            lblNumeroCheque.setVisible(false);
            lblNumeroTarjeta.setVisible(false);
        } else if (cboTipoPago.getSelectedIndex() == 1) {
            cboTipoTarjeta.setVisible(true);
            txtNumeroTarjeta.setVisible(true);
            lblTipoTarjeta.setVisible(true);
            lblNumeroTarjeta.setVisible(true);

            cboBanco.setVisible(false);
            cboCuenta.setVisible(false);
            txtNumeroCheque.setVisible(false);
            lblBanco.setVisible(false);
            lblCuenta.setVisible(false);
            lblNumeroCheque.setVisible(false);

        } else if (cboTipoPago.getSelectedIndex() == 2) {
            cboBanco.setVisible(true);
            txtNumeroCheque.setVisible(true);
            lblBanco.setVisible(true);
            lblNumeroCheque.setVisible(true);

            cboTipoTarjeta.setVisible(false);
            cboCuenta.setVisible(false);
            txtNumeroTarjeta.setVisible(false);
            lblTipoTarjeta.setVisible(false);
            lblCuenta.setVisible(false);
            lblNumeroTarjeta.setVisible(false);
        } else {
            cboBanco.setVisible(true);
            cboCuenta.setVisible(true);
            lblBanco.setVisible(true);
            lblCuenta.setVisible(true);

            cboTipoTarjeta.setVisible(false);
            txtNumeroCheque.setVisible(false);
            txtNumeroTarjeta.setVisible(false);
            lblTipoTarjeta.setVisible(false);

            lblNumeroCheque.setVisible(false);
            lblNumeroTarjeta.setVisible(false);
        }
    }//GEN-LAST:event_cboTipoPagoActionPerformed

    private void cboTipoPagoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cboTipoPagoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (cboTipoTarjeta.isVisible()) {
                cboTipoTarjeta.requestFocus();
            } else if (cboBanco.isVisible()) {
                cboBanco.requestFocus();
            } else {
                txtMontoAbonado.requestFocus();
                txtMontoAbonado.selectAll();
            }
        }
    }//GEN-LAST:event_cboTipoPagoKeyPressed

    private void txtMontoAbonadoCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtMontoAbonadoCaretUpdate

    }//GEN-LAST:event_txtMontoAbonadoCaretUpdate

    private void txtMontoAbonadoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMontoAbonadoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (btnGuardar.isEnabled()) {
                btnGuardar.doClick();
            }
        }

    }//GEN-LAST:event_txtMontoAbonadoKeyPressed

    private void cboTipoTarjetaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cboTipoTarjetaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtNumeroTarjeta.requestFocus();
        }
    }//GEN-LAST:event_cboTipoTarjetaKeyPressed

    private void cboBancoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboBancoActionPerformed
        if (cboCuenta.isVisible()) {
            recargarCuentaBancaria();
        }
    }//GEN-LAST:event_cboBancoActionPerformed

    private void cboBancoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cboBancoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (cboCuenta.isVisible()) {
                cboCuenta.requestFocus();
            } else {
                txtNumeroCheque.requestFocus();
            }
        }
    }//GEN-LAST:event_cboBancoKeyPressed

    private void cboCuentaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cboCuentaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtMontoAbonado.requestFocus();
            txtMontoAbonado.selectAll();
        }
    }//GEN-LAST:event_cboCuentaKeyPressed

    private void txtMontoAbonadoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMontoAbonadoKeyTyped
        control.decimal(evt, txtMontoAbonado.getText());
    }//GEN-LAST:event_txtMontoAbonadoKeyTyped

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        if (!pagado || idPagoCliente != null) {
            guardar();
        } else {
            JOptionPane.showMessageDialog(this, "Ya se han completado todos los pagos pendientes, ya no se pueden registrar más pagos", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        cancelar();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        eliminar();
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void tablaDetalleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaDetalleMouseClicked
        if (evt.getClickCount() > 1 && tablaDetalle.isEnabled()) {
            cargarDatosModificar();
        }
    }//GEN-LAST:event_tablaDetalleMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnSalir;
    private static javax.swing.JComboBox cboBanco;
    private static javax.swing.JComboBox cboCuenta;
    private javax.swing.JComboBox cboTipoPago;
    private static javax.swing.JComboBox cboTipoTarjeta;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblBanco;
    private javax.swing.JLabel lblCliente;
    private javax.swing.JLabel lblComprobante;
    private javax.swing.JLabel lblCuenta;
    private javax.swing.JLabel lblImporte;
    private javax.swing.JLabel lblMontoAbonado;
    private javax.swing.JLabel lblNumeroCheque;
    private javax.swing.JLabel lblNumeroTarjeta;
    private javax.swing.JLabel lblRUC;
    private javax.swing.JLabel lblTipoTarjeta;
    private javax.swing.JTable tablaDetalle;
    private javax.swing.JTextField txtImporteCobrado;
    private javax.swing.JTextField txtImportePendiente;
    private javax.swing.JTextField txtMontoAbonado;
    private javax.swing.JTextField txtNumeroCheque;
    private javax.swing.JTextField txtNumeroTarjeta;
    // End of variables declaration//GEN-END:variables

    void setIdVenta(String idVenta) {
        this.idVenta = idVenta;
        String[] cargarRegistro = control.cargarRegistro(String.format("SELECT c.`nomcte`, c.`dniRuc`, CONCAT(t.`nombre`, ' ' ,co.`serie`, ' - ' ,co.`numero`) AS comprobante, "
                + "FORMAT(v.`subTotalInafecto`+ v.`subTotalAfecto`+ v.`igv`,2) AS importe, v.`pagado` "
                + "FROM venta v, cliente c, comprobante co, tipocomprobante t "
                + "WHERE co.`idTipoComprobante`=t.`idTipoComprobante` "
                + "AND co.`idComprobante`=v.`idComprobante` "
                + "AND v.`idCliente`=c.`idCliente` "
                + "AND v.`idVenta`=%s;", idVenta), 5);
        if (cargarRegistro != null) {
            lblCliente.setText(cargarRegistro[0]);
            lblRUC.setText(cargarRegistro[1]);
            lblComprobante.setText(cargarRegistro[2]);
            lblImporte.setText(cargarRegistro[3]);
            pagado = cargarRegistro[4].equals("1");

        }
        cargarCobros();

    }

    private void cargarCobros() {
        String sqlEfectivo = "SELECT c.`idCobroVenta`, DATE_FORMAT(c.`fecha`,'%d/%m/%Y') AS fecha , 'Efectivo' AS tipoPago, "
                + "'' AS bancoTarjeta, '' AS numTarjetaChequeCuenta,FORMAT(c.`importe`,2) AS importe, c.`fecha` "
                + "FROM `cobroventa` c "
                + "WHERE c.`idVenta`=" + idVenta + " AND c.`tipoPago`=0 ";
        String sqlTarjeta = "SELECT c.`idCobroVenta`, DATE_FORMAT(c.`fecha`,'%d/%m/%Y') AS fecha , 'Tarjeta' AS tipoPago, "
                + "t.`nombre` AS bancoTarjeta, c.`numeroTarjeta`  AS numTarjetaChequeCuenta,FORMAT(c.`importe`,2) AS importe, c.`fecha` "
                + "FROM `cobroventa` c, tipotarjeta t "
                + "WHERE  t.`idTipoTarjeta`=c.`idTipoTarjeta` AND c.`idVenta`=" + idVenta + " AND c.`tipoPago`=1 ";
        String sqlCheque = "SELECT c.`idCobroVenta`, DATE_FORMAT(c.`fecha`,'%d/%m/%Y') AS fecha , 'Cheque' AS tipoPago, "
                + "b.`nombre` AS bancoTarjeta, c.`numeroCheque` AS numTarjetaChequeCuenta,FORMAT(c.`importe`,2) AS importe, c.`fecha` "
                + "FROM `cobroventa` c, banco b "
                + "WHERE c.`idBanco`=b.`idBanco` AND c.`idVenta`=" + idVenta + " AND c.`tipoPago`=2 ";
        String sqlCuenta = "SELECT c.`idCobroVenta`, DATE_FORMAT(c.`fecha`,'%d/%m/%Y') AS fecha , 'Cuenta Bancaria' AS tipoPago, "
                + "b.`nombre` AS bancoTarjeta, m.`numeroCuenta`  AS numTarjetaChequeCuenta,FORMAT(c.`importe`,2) AS importe, c.`fecha` "
                + "FROM `cobroventa` c, banco b, miscuentas m "
                + "WHERE m.`idBanco`=b.`idBanco` AND c.`idBanco`=b.`idBanco` AND c.`idVenta`=" + idVenta + " AND c.`tipoPago`=3 ";

        String sql = String.format("(%s) UNION (%s) UNION (%s) UNION (%s) ORDER BY 7; ", sqlEfectivo, sqlTarjeta, sqlCheque, sqlCuenta);
        control.LlenarJTabla(model, sql, 7);
        btnEliminar.setEnabled(false);
        calcularTotales();
        idPagoCliente = null;
        montoEditando = 0;
    }

    public static void recargarBancos() {
        cboBancoIsFill = false;
        Object selectedItem = cboBanco.getSelectedItem();
        control.fillComboBox("SELECT `idBanco`, `nombre` FROM `banco` ORDER BY `nombre`;", cboBanco, mapBanco);
        if (selectedItem != null) {
            cboBanco.setSelectedItem(selectedItem);
        } else {
            try {
                cboBanco.setSelectedIndex(0);
            } catch (Exception e) {
            }
        }
        cboBancoIsFill = true;
    }

    public static void recargarTipoTarjeta() {
        Object selectedItem = cboTipoTarjeta.getSelectedItem();
        control.fillComboBox("SELECT * FROM `tipotarjeta` ORDER BY `nombre`;", cboTipoTarjeta, mapTipoTarjeta);
        if (selectedItem != null) {
            cboTipoTarjeta.setSelectedItem(selectedItem);
        }
    }

    public static void recargarCuentaBancaria() {
        if (cboBancoIsFill) {
            Object selectedItem = cboCuenta.getSelectedItem();
            control.fillComboBox(String.format("SELECT `idMisCuentas`, `numeroCuenta` FROM `miscuentas` WHERE `idBanco`=%s;", mapBanco.get(cboBanco.getSelectedIndex())), cboCuenta, mapCuentaBancaria);
            if (selectedItem != null) {
                cboCuenta.setSelectedItem(selectedItem);
            }
        }
    }

    private void calcularTotales() {
        double importePagado = 0;
        double importePendiente;
        double total = Double.parseDouble(lblImporte.getText().replace(",", ""));
        for (int i = 0; i < model.getRowCount(); i++) {
            importePagado += Double.parseDouble(model.getValueAt(i, 5).toString().replace(",", ""));
        }
        importePendiente = total - importePagado;
        txtImporteCobrado.setText(control.decimalFormat(importePagado));
        txtImportePendiente.setText(control.decimalFormat(importePendiente));
    }

    private void guardar() {
        double importePagar = 0;
        double importePendiente = Double.parseDouble(txtImportePendiente.getText().trim().replace(",", ""));
        try {
            importePagar = Double.parseDouble(txtMontoAbonado.getText().trim().replace(",", ""));
        } catch (NumberFormatException e) {
        }

        if (importePagar > importePendiente + montoEditando) {
            importePagar = importePendiente + montoEditando;

        }
        if (jDateChooser1.getDate() == null) {
            JOptionPane.showMessageDialog(this, "Indique la fecha en la que se realizó el cobro", "Mensaje", JOptionPane.WARNING_MESSAGE);
            ((JTextField) jDateChooser1.getDateEditor()).requestFocus();
            ((JTextField) jDateChooser1.getDateEditor()).selectAll();

            return;
        }
        if (cboTipoTarjeta.isVisible()) {
            if (cboTipoTarjeta.getSelectedIndex() < 0) {
                JOptionPane.showMessageDialog(this, "Indique la tarjeta para continuar con el cobro", "Mensaje", JOptionPane.WARNING_MESSAGE);
                cboTipoTarjeta.requestFocus();
                return;
            }
            if (txtNumeroTarjeta.getText().trim().length() <= 0) {
                JOptionPane.showMessageDialog(this, "Indique el número de la tarjeta", "Mensaje", JOptionPane.WARNING_MESSAGE);
                txtNumeroTarjeta.requestFocus();
                return;
            }
        }
        if (cboBanco.isVisible()) {
            if (cboBanco.getSelectedIndex() < 0) {
                JOptionPane.showMessageDialog(this, "Indique en banco", "Mensaje", JOptionPane.WARNING_MESSAGE);
                cboBanco.requestFocus();
                return;
            }
            if (txtNumeroCheque.isVisible() && txtNumeroCheque.getText().trim().length() <= 0) {
                JOptionPane.showMessageDialog(this, "Indique en número de cheque", "Mensaje", JOptionPane.WARNING_MESSAGE);
                txtNumeroCheque.requestFocus();
                return;
            }
            if (cboCuenta.getSelectedIndex() < 0) {
                JOptionPane.showMessageDialog(this, "Indique el número de cuenta bancaria", "Mensaje", JOptionPane.WARNING_MESSAGE);
                cboCuenta.requestFocus();
                return;
            }
        }

        if (importePagar > 0) {
            control.Sql = String.format("CALL registrarCobroVenta(%s,%s,%s,%d,%s,%s,%s,%s,'%s','%s',%d);",
                    idPagoCliente, idVenta, "CURDATE()", cboTipoPago.getSelectedIndex(), importePagar,
                    mapTipoTarjeta.get(cboTipoTarjeta.getSelectedIndex()), mapBanco.get(cboBanco.getSelectedIndex()),
                    mapCuentaBancaria.get(cboCuenta.getSelectedIndex()), txtNumeroTarjeta.getText(), txtNumeroCheque.getText(), idPagoCliente == null ? 0 : 1);
            boolean ejecutar = control.ejecutar(control.Sql);
            if (ejecutar) {
                cancelar();
                cargarCobros();
                JOptionPane.showMessageDialog(this, "El pago del cliente se ha registrado satisfactoriamente", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
                importePendiente = Double.parseDouble(txtImportePendiente.getText().replace(",", ""));

                control.ejecutar(String.format("UPDATE venta v SET v.`pagado`=%s,v.`estado`='%s' WHERE v.`idVenta`=%s;", importePendiente <= 0,importePendiente <= 0 ? "Pagado":"Pediente", idVenta));
                pagado = importePendiente <= 0;
                
                imprimirComprobanteTicket(String.valueOf(idVenta),importePagar);
                if (frmListadoCuentasPorCobrar != null) {
                    frmListadoCuentasPorCobrar.recargar();
                }
            } else {
                JOptionPane.showMessageDialog(this, "Ocurrió un error al registrar el pago del cliente", "Mensaje", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "El importe a abonar debe ser mayor a cero (0)", "Mensaje", JOptionPane.WARNING_MESSAGE);
            txtMontoAbonado.requestFocus();
            txtMontoAbonado.selectAll();
        }
    }

    private void imprimirComprobanteTicket(String idVenta, double deuda) {
        if (JOptionPane.showConfirmDialog(this, "Se emitió un ticket de pago, ¿Desea Imprimirlo?", "Comprobante", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION) {
            Map map = new HashMap();
            map.put("idVenta", idVenta);
            double deuda1=deuda*(-1);
            map.put("deuda", deuda1);
            control.imprimirComprobanteVenta(idVenta, "ticket", map);
        }

    }
    private void cancelar() {
        cboTipoPago.setSelectedIndex(0);
        txtNumeroCheque.setText("");
        txtNumeroTarjeta.setText("");
        txtMontoAbonado.setText("0.00");
        tablaDetalle.setEnabled(true);
        try {
            cboTipoTarjeta.setSelectedIndex(0);
        } catch (Exception e) {
        }
        try {
            cboBanco.setSelectedIndex(0);
        } catch (Exception e) {
        }
        if (tablaDetalle.getSelectedRow() >= 0) {
            btnEliminar.setEnabled(true);
        }
        idPagoCliente = null;

    }

    private void eliminar() {
        int showConfirmDialog = JOptionPane.showConfirmDialog(this, "Si elimina este pago ya no podrá recuperarlo posteriormente.\n¿Confirma que desea continuar?", "Eliminar pago", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (showConfirmDialog == JOptionPane.YES_OPTION) {
            control.ejecutar(String.format("DELETE FROM cobroventa WHERE `idCobroVenta`=%s;", model.getValueAt(tablaDetalle.getSelectedRow(), 0).toString()));
            cargarCobros();

            double montoRestante = Double.parseDouble(txtImportePendiente.getText().replace(",", ""));

            control.ejecutar(String.format("UPDATE venta v SET v.`pagado`=%s,v.`estado`='%s' WHERE v.`idVenta`=%s;", montoRestante <= 0,montoRestante <= 0 ? "Pagado":"Pediente", idVenta));
            pagado = montoRestante <= 0;

            if (frmListadoCuentasPorCobrar != null) {
                frmListadoCuentasPorCobrar.recargar();
            }
        }
    }

    private void cargarDatosModificar() {
        int row = tablaDetalle.getSelectedRow();
        idPagoCliente = model.getValueAt(row, 0).toString();
        ((JTextField) jDateChooser1.getDateEditor()).setText(model.getValueAt(row, 1).toString());
        cboTipoPago.setSelectedItem(model.getValueAt(row, 2).toString());

        if (cboBanco.isVisible()) {
            cboBanco.setSelectedItem(model.getValueAt(row, 3).toString());
        }
        if (cboCuenta.isVisible()) {
            cboCuenta.setSelectedItem(model.getValueAt(row, 4).toString());
        }

        if (txtNumeroTarjeta.isVisible()) {
            txtNumeroTarjeta.setText(model.getValueAt(row, 4).toString());
        }
        if (txtNumeroCheque.isVisible()) {
            txtNumeroCheque.setText(model.getValueAt(row, 4).toString());
        }
        txtMontoAbonado.setText(model.getValueAt(row, 5).toString().replace(",", ""));

        montoEditando = Double.parseDouble(model.getValueAt(row, 5).toString().replace(",", ""));
        ((JTextField) jDateChooser1.getDateEditor()).requestFocus();
        tablaDetalle.setEnabled(false);
        btnEliminar.setEnabled(false);
    }
}
