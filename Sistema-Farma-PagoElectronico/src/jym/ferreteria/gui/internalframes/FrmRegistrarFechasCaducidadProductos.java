/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jym.ferreteria.gui.internalframes;

import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Locale;
import javax.swing.ImageIcon;
import javax.swing.SwingWorker;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import jym.ferreteria.clases.Controlador;
import jym.ferreteria.renders.LabelRenderer;
import jym.ferreteria.renders.LateralTableHeader;
import jym.ferreteria.renders.CustomTableModel;

/**
 *
 * @author Omr
 */
public class FrmRegistrarFechasCaducidadProductos extends javax.swing.JInternalFrame {

    private Controlador control = new Controlador();
    private CustomTableModel model = new CustomTableModel() {
        private DecimalFormat format = new DecimalFormat("0.00");

        @Override
        public boolean isCellEditable(int row, int column) {
            return column == 4;
        }

        @Override
        public void setValueAt(Object aValue, int row, int column) {
            if (column == 4) {
                if (isFechaValida(aValue.toString())) {
                    super.setValueAt(aValue, row, column);
                } else {
                    super.setValueAt("", row, column);
                }
            } else {
                super.setValueAt(aValue, row, column);
            }

        }

    };

    /**
     * Creates new form RegistrarFechasCaducidadProductos
     */
    public FrmRegistrarFechasCaducidadProductos() {
        initComponents();
        this.setFrameIcon(new ImageIcon(this.getClass().getResource(Controlador.ICON_PATH)));
        model.setColumnIdentifiers(new String[]{"N°", "ID", "Descripción", "Und. Medida", "F. caducidad"});
        tablaInventario.setModel(model);
        tablaInventario.setDefaultRenderer(Object.class, new LabelRenderer());
        tablaInventario.getColumnModel().getColumn(0).setCellRenderer(new LateralTableHeader());

        control.hideTableColumn(tablaInventario, 1);
        control.tableWidthColumn(tablaInventario, 50, 0);
        control.tableWidthColumn(tablaInventario, 500, 2);
        control.tableMaxWidthColumn(tablaInventario, 80, 4);
        tablaInventario.getColumnModel().getColumn(0).setMaxWidth(50);
        model.addTableModelListener(new TableModelListener() {

            @Override
            public void tableChanged(TableModelEvent e) {
                if (e.getType() == TableModelEvent.UPDATE) {
                    actualizar(e);
                }
            }

            private void actualizar(final TableModelEvent e) {
                SwingWorker worker = new SwingWorker() {

                    @Override
                    protected Object doInBackground() throws Exception {
                        String fec = "NULL";
                        if (!"".equals(model.getValueAt(e.getFirstRow(), 4).toString())) {
                            fec = "'" + model.getValueAt(e.getFirstRow(), 4).toString() + "'";
                        }
                        control.ejecutar(String.format("UPDATE produto p SET p.`fechaCaducidad`=%s WHERE p.`idProduto`=%s;", fec, model.getValueAt(e.getFirstRow(), 1)));
                        return true;
                    }
                };
                worker.execute();
            }

        });
        cargarProductos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtBuscar = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaInventario = new javax.swing.JTable();
        btnSalir = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("Inventario");

        jLabel1.setText("Buscar: ");
        jLabel1.setName("jLabel1"); // NOI18N

        txtBuscar.setName("txtBuscar"); // NOI18N
        txtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarKeyReleased(evt);
            }
        });

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        tablaInventario.setAutoCreateRowSorter(true);
        tablaInventario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaInventario.setName("tablaInventario"); // NOI18N
        tablaInventario.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tablaInventario);

        btnSalir.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jym/ferreteria/imagenes/salir.png"))); // NOI18N
        btnSalir.setMnemonic('S');
        btnSalir.setText("Salir");
        btnSalir.setName("btnSalir"); // NOI18N
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1016, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBuscar))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSalir)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtBuscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyReleased

        cargarProductos();

    }//GEN-LAST:event_txtBuscarKeyReleased

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSalir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaInventario;
    private javax.swing.JTextField txtBuscar;
    // End of variables declaration//GEN-END:variables

    private void cargarProductos() {
        control.LlenarJTabla(model, "SELECT '',`ID`, `Descripcion`, `Unidad`,  `fechaCaducidad` FROM `vta_catalogo` "
                + "WHERE `Descripcion` LIKE '%" + txtBuscar.getText() + "%' OR `Unidad` LIKE '%" + txtBuscar.getText() + "%' OR `fechaCaducidad` LIKE '%" + txtBuscar.getText() + "%' "
                + "ORDER BY `Descripcion`;", 5);
        System.out.println("SELECT '',`ID`, `Descripcion`, `Unidad`,  `fechaCaducidad` FROM `vta_catalogo` "
                + "WHERE `Descripcion` LIKE '%" + txtBuscar.getText() + "%' OR `Unidad` LIKE '%" + txtBuscar.getText() + "%' OR `fechaCaducidad` LIKE '%" + txtBuscar.getText() + "%' "
                + "ORDER BY `Descripcion`;");
    }

    private boolean isFechaValida(String fecha) {
        try {
            SimpleDateFormat formatoFecha = new SimpleDateFormat("dd/MM/yyyy", Locale.getDefault());
            formatoFecha.setLenient(false);
            formatoFecha.parse(fecha);
        } catch (ParseException e) {
            return false;
        }
        return true;
    }
}
